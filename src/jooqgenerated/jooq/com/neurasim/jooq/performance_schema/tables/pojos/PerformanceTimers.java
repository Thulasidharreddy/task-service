/*
 * This file is generated by jOOQ.
 */
package com.neurasim.jooq.performance_schema.tables.pojos;


import com.neurasim.jooq.performance_schema.enums.PerformanceTimersTimerName;

import java.io.Serializable;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PerformanceTimers implements Serializable {

    private static final long serialVersionUID = 1L;

    private final PerformanceTimersTimerName timerName;
    private final Long timerFrequency;
    private final Long timerResolution;
    private final Long timerOverhead;

    public PerformanceTimers(PerformanceTimers value) {
        this.timerName = value.timerName;
        this.timerFrequency = value.timerFrequency;
        this.timerResolution = value.timerResolution;
        this.timerOverhead = value.timerOverhead;
    }

    public PerformanceTimers(
        PerformanceTimersTimerName timerName,
        Long timerFrequency,
        Long timerResolution,
        Long timerOverhead
    ) {
        this.timerName = timerName;
        this.timerFrequency = timerFrequency;
        this.timerResolution = timerResolution;
        this.timerOverhead = timerOverhead;
    }

    /**
     * Getter for <code>performance_schema.performance_timers.TIMER_NAME</code>.
     */
    public PerformanceTimersTimerName getTimerName() {
        return this.timerName;
    }

    /**
     * Getter for
     * <code>performance_schema.performance_timers.TIMER_FREQUENCY</code>.
     */
    public Long getTimerFrequency() {
        return this.timerFrequency;
    }

    /**
     * Getter for
     * <code>performance_schema.performance_timers.TIMER_RESOLUTION</code>.
     */
    public Long getTimerResolution() {
        return this.timerResolution;
    }

    /**
     * Getter for
     * <code>performance_schema.performance_timers.TIMER_OVERHEAD</code>.
     */
    public Long getTimerOverhead() {
        return this.timerOverhead;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final PerformanceTimers other = (PerformanceTimers) obj;
        if (this.timerName == null) {
            if (other.timerName != null)
                return false;
        }
        else if (!this.timerName.equals(other.timerName))
            return false;
        if (this.timerFrequency == null) {
            if (other.timerFrequency != null)
                return false;
        }
        else if (!this.timerFrequency.equals(other.timerFrequency))
            return false;
        if (this.timerResolution == null) {
            if (other.timerResolution != null)
                return false;
        }
        else if (!this.timerResolution.equals(other.timerResolution))
            return false;
        if (this.timerOverhead == null) {
            if (other.timerOverhead != null)
                return false;
        }
        else if (!this.timerOverhead.equals(other.timerOverhead))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.timerName == null) ? 0 : this.timerName.hashCode());
        result = prime * result + ((this.timerFrequency == null) ? 0 : this.timerFrequency.hashCode());
        result = prime * result + ((this.timerResolution == null) ? 0 : this.timerResolution.hashCode());
        result = prime * result + ((this.timerOverhead == null) ? 0 : this.timerOverhead.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("PerformanceTimers (");

        sb.append(timerName);
        sb.append(", ").append(timerFrequency);
        sb.append(", ").append(timerResolution);
        sb.append(", ").append(timerOverhead);

        sb.append(")");
        return sb.toString();
    }
}
