/*
 * This file is generated by jOOQ.
 */
package com.neurasim.jooq.performance_schema.tables;


import com.neurasim.jooq.performance_schema.Keys;
import com.neurasim.jooq.performance_schema.PerformanceSchema;
import com.neurasim.jooq.performance_schema.tables.records.EventsTransactionsSummaryByThreadByEventNameRecord;

import java.util.function.Function;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Function17;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Records;
import org.jooq.Row17;
import org.jooq.Schema;
import org.jooq.SelectField;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EventsTransactionsSummaryByThreadByEventName extends TableImpl<EventsTransactionsSummaryByThreadByEventNameRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of
     * <code>performance_schema.events_transactions_summary_by_thread_by_event_name</code>
     */
    public static final EventsTransactionsSummaryByThreadByEventName EVENTS_TRANSACTIONS_SUMMARY_BY_THREAD_BY_EVENT_NAME = new EventsTransactionsSummaryByThreadByEventName();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<EventsTransactionsSummaryByThreadByEventNameRecord> getRecordType() {
        return EventsTransactionsSummaryByThreadByEventNameRecord.class;
    }

    /**
     * The column
     * <code>performance_schema.events_transactions_summary_by_thread_by_event_name.THREAD_ID</code>.
     */
    public final TableField<EventsTransactionsSummaryByThreadByEventNameRecord, ULong> THREAD_ID = createField(DSL.name("THREAD_ID"), SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column
     * <code>performance_schema.events_transactions_summary_by_thread_by_event_name.EVENT_NAME</code>.
     */
    public final TableField<EventsTransactionsSummaryByThreadByEventNameRecord, String> EVENT_NAME = createField(DSL.name("EVENT_NAME"), SQLDataType.VARCHAR(128).nullable(false), this, "");

    /**
     * The column
     * <code>performance_schema.events_transactions_summary_by_thread_by_event_name.COUNT_STAR</code>.
     */
    public final TableField<EventsTransactionsSummaryByThreadByEventNameRecord, ULong> COUNT_STAR = createField(DSL.name("COUNT_STAR"), SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column
     * <code>performance_schema.events_transactions_summary_by_thread_by_event_name.SUM_TIMER_WAIT</code>.
     */
    public final TableField<EventsTransactionsSummaryByThreadByEventNameRecord, ULong> SUM_TIMER_WAIT = createField(DSL.name("SUM_TIMER_WAIT"), SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column
     * <code>performance_schema.events_transactions_summary_by_thread_by_event_name.MIN_TIMER_WAIT</code>.
     */
    public final TableField<EventsTransactionsSummaryByThreadByEventNameRecord, ULong> MIN_TIMER_WAIT = createField(DSL.name("MIN_TIMER_WAIT"), SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column
     * <code>performance_schema.events_transactions_summary_by_thread_by_event_name.AVG_TIMER_WAIT</code>.
     */
    public final TableField<EventsTransactionsSummaryByThreadByEventNameRecord, ULong> AVG_TIMER_WAIT = createField(DSL.name("AVG_TIMER_WAIT"), SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column
     * <code>performance_schema.events_transactions_summary_by_thread_by_event_name.MAX_TIMER_WAIT</code>.
     */
    public final TableField<EventsTransactionsSummaryByThreadByEventNameRecord, ULong> MAX_TIMER_WAIT = createField(DSL.name("MAX_TIMER_WAIT"), SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column
     * <code>performance_schema.events_transactions_summary_by_thread_by_event_name.COUNT_READ_WRITE</code>.
     */
    public final TableField<EventsTransactionsSummaryByThreadByEventNameRecord, ULong> COUNT_READ_WRITE = createField(DSL.name("COUNT_READ_WRITE"), SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column
     * <code>performance_schema.events_transactions_summary_by_thread_by_event_name.SUM_TIMER_READ_WRITE</code>.
     */
    public final TableField<EventsTransactionsSummaryByThreadByEventNameRecord, ULong> SUM_TIMER_READ_WRITE = createField(DSL.name("SUM_TIMER_READ_WRITE"), SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column
     * <code>performance_schema.events_transactions_summary_by_thread_by_event_name.MIN_TIMER_READ_WRITE</code>.
     */
    public final TableField<EventsTransactionsSummaryByThreadByEventNameRecord, ULong> MIN_TIMER_READ_WRITE = createField(DSL.name("MIN_TIMER_READ_WRITE"), SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column
     * <code>performance_schema.events_transactions_summary_by_thread_by_event_name.AVG_TIMER_READ_WRITE</code>.
     */
    public final TableField<EventsTransactionsSummaryByThreadByEventNameRecord, ULong> AVG_TIMER_READ_WRITE = createField(DSL.name("AVG_TIMER_READ_WRITE"), SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column
     * <code>performance_schema.events_transactions_summary_by_thread_by_event_name.MAX_TIMER_READ_WRITE</code>.
     */
    public final TableField<EventsTransactionsSummaryByThreadByEventNameRecord, ULong> MAX_TIMER_READ_WRITE = createField(DSL.name("MAX_TIMER_READ_WRITE"), SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column
     * <code>performance_schema.events_transactions_summary_by_thread_by_event_name.COUNT_READ_ONLY</code>.
     */
    public final TableField<EventsTransactionsSummaryByThreadByEventNameRecord, ULong> COUNT_READ_ONLY = createField(DSL.name("COUNT_READ_ONLY"), SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column
     * <code>performance_schema.events_transactions_summary_by_thread_by_event_name.SUM_TIMER_READ_ONLY</code>.
     */
    public final TableField<EventsTransactionsSummaryByThreadByEventNameRecord, ULong> SUM_TIMER_READ_ONLY = createField(DSL.name("SUM_TIMER_READ_ONLY"), SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column
     * <code>performance_schema.events_transactions_summary_by_thread_by_event_name.MIN_TIMER_READ_ONLY</code>.
     */
    public final TableField<EventsTransactionsSummaryByThreadByEventNameRecord, ULong> MIN_TIMER_READ_ONLY = createField(DSL.name("MIN_TIMER_READ_ONLY"), SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column
     * <code>performance_schema.events_transactions_summary_by_thread_by_event_name.AVG_TIMER_READ_ONLY</code>.
     */
    public final TableField<EventsTransactionsSummaryByThreadByEventNameRecord, ULong> AVG_TIMER_READ_ONLY = createField(DSL.name("AVG_TIMER_READ_ONLY"), SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column
     * <code>performance_schema.events_transactions_summary_by_thread_by_event_name.MAX_TIMER_READ_ONLY</code>.
     */
    public final TableField<EventsTransactionsSummaryByThreadByEventNameRecord, ULong> MAX_TIMER_READ_ONLY = createField(DSL.name("MAX_TIMER_READ_ONLY"), SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    private EventsTransactionsSummaryByThreadByEventName(Name alias, Table<EventsTransactionsSummaryByThreadByEventNameRecord> aliased) {
        this(alias, aliased, null);
    }

    private EventsTransactionsSummaryByThreadByEventName(Name alias, Table<EventsTransactionsSummaryByThreadByEventNameRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased
     * <code>performance_schema.events_transactions_summary_by_thread_by_event_name</code>
     * table reference
     */
    public EventsTransactionsSummaryByThreadByEventName(String alias) {
        this(DSL.name(alias), EVENTS_TRANSACTIONS_SUMMARY_BY_THREAD_BY_EVENT_NAME);
    }

    /**
     * Create an aliased
     * <code>performance_schema.events_transactions_summary_by_thread_by_event_name</code>
     * table reference
     */
    public EventsTransactionsSummaryByThreadByEventName(Name alias) {
        this(alias, EVENTS_TRANSACTIONS_SUMMARY_BY_THREAD_BY_EVENT_NAME);
    }

    /**
     * Create a
     * <code>performance_schema.events_transactions_summary_by_thread_by_event_name</code>
     * table reference
     */
    public EventsTransactionsSummaryByThreadByEventName() {
        this(DSL.name("events_transactions_summary_by_thread_by_event_name"), null);
    }

    public <O extends Record> EventsTransactionsSummaryByThreadByEventName(Table<O> child, ForeignKey<O, EventsTransactionsSummaryByThreadByEventNameRecord> key) {
        super(child, key, EVENTS_TRANSACTIONS_SUMMARY_BY_THREAD_BY_EVENT_NAME);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : PerformanceSchema.PERFORMANCE_SCHEMA;
    }

    @Override
    public UniqueKey<EventsTransactionsSummaryByThreadByEventNameRecord> getPrimaryKey() {
        return Keys.KEY_EVENTS_TRANSACTIONS_SUMMARY_BY_THREAD_BY_EVENT_NAME_PRIMARY;
    }

    @Override
    public EventsTransactionsSummaryByThreadByEventName as(String alias) {
        return new EventsTransactionsSummaryByThreadByEventName(DSL.name(alias), this);
    }

    @Override
    public EventsTransactionsSummaryByThreadByEventName as(Name alias) {
        return new EventsTransactionsSummaryByThreadByEventName(alias, this);
    }

    @Override
    public EventsTransactionsSummaryByThreadByEventName as(Table<?> alias) {
        return new EventsTransactionsSummaryByThreadByEventName(alias.getQualifiedName(), this);
    }

    /**
     * Rename this table
     */
    @Override
    public EventsTransactionsSummaryByThreadByEventName rename(String name) {
        return new EventsTransactionsSummaryByThreadByEventName(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public EventsTransactionsSummaryByThreadByEventName rename(Name name) {
        return new EventsTransactionsSummaryByThreadByEventName(name, null);
    }

    /**
     * Rename this table
     */
    @Override
    public EventsTransactionsSummaryByThreadByEventName rename(Table<?> name) {
        return new EventsTransactionsSummaryByThreadByEventName(name.getQualifiedName(), null);
    }

    // -------------------------------------------------------------------------
    // Row17 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row17<ULong, String, ULong, ULong, ULong, ULong, ULong, ULong, ULong, ULong, ULong, ULong, ULong, ULong, ULong, ULong, ULong> fieldsRow() {
        return (Row17) super.fieldsRow();
    }

    /**
     * Convenience mapping calling {@link SelectField#convertFrom(Function)}.
     */
    public <U> SelectField<U> mapping(Function17<? super ULong, ? super String, ? super ULong, ? super ULong, ? super ULong, ? super ULong, ? super ULong, ? super ULong, ? super ULong, ? super ULong, ? super ULong, ? super ULong, ? super ULong, ? super ULong, ? super ULong, ? super ULong, ? super ULong, ? extends U> from) {
        return convertFrom(Records.mapping(from));
    }

    /**
     * Convenience mapping calling {@link SelectField#convertFrom(Class,
     * Function)}.
     */
    public <U> SelectField<U> mapping(Class<U> toType, Function17<? super ULong, ? super String, ? super ULong, ? super ULong, ? super ULong, ? super ULong, ? super ULong, ? super ULong, ? super ULong, ? super ULong, ? super ULong, ? super ULong, ? super ULong, ? super ULong, ? super ULong, ? super ULong, ? super ULong, ? extends U> from) {
        return convertFrom(toType, Records.mapping(from));
    }
}
