/*
 * This file is generated by jOOQ.
 */
package com.neurasim.jooq.performance_schema.tables.pojos;


import java.io.Serializable;

import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FileInstances implements Serializable {

    private static final long serialVersionUID = 1L;

    private final String fileName;
    private final String eventName;
    private final UInteger openCount;

    public FileInstances(FileInstances value) {
        this.fileName = value.fileName;
        this.eventName = value.eventName;
        this.openCount = value.openCount;
    }

    public FileInstances(
        String fileName,
        String eventName,
        UInteger openCount
    ) {
        this.fileName = fileName;
        this.eventName = eventName;
        this.openCount = openCount;
    }

    /**
     * Getter for <code>performance_schema.file_instances.FILE_NAME</code>.
     */
    public String getFileName() {
        return this.fileName;
    }

    /**
     * Getter for <code>performance_schema.file_instances.EVENT_NAME</code>.
     */
    public String getEventName() {
        return this.eventName;
    }

    /**
     * Getter for <code>performance_schema.file_instances.OPEN_COUNT</code>.
     */
    public UInteger getOpenCount() {
        return this.openCount;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final FileInstances other = (FileInstances) obj;
        if (this.fileName == null) {
            if (other.fileName != null)
                return false;
        }
        else if (!this.fileName.equals(other.fileName))
            return false;
        if (this.eventName == null) {
            if (other.eventName != null)
                return false;
        }
        else if (!this.eventName.equals(other.eventName))
            return false;
        if (this.openCount == null) {
            if (other.openCount != null)
                return false;
        }
        else if (!this.openCount.equals(other.openCount))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.fileName == null) ? 0 : this.fileName.hashCode());
        result = prime * result + ((this.eventName == null) ? 0 : this.eventName.hashCode());
        result = prime * result + ((this.openCount == null) ? 0 : this.openCount.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("FileInstances (");

        sb.append(fileName);
        sb.append(", ").append(eventName);
        sb.append(", ").append(openCount);

        sb.append(")");
        return sb.toString();
    }
}
