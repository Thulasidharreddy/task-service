/*
 * This file is generated by jOOQ.
 */
package com.neurasim.jooq.performance_schema.tables.records;


import com.neurasim.jooq.performance_schema.enums.VariablesMetadataDataType;
import com.neurasim.jooq.performance_schema.enums.VariablesMetadataVariableScope;
import com.neurasim.jooq.performance_schema.tables.VariablesMetadata;

import org.jooq.Field;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class VariablesMetadataRecord extends TableRecordImpl<VariablesMetadataRecord> implements Record6<String, VariablesMetadataVariableScope, VariablesMetadataDataType, String, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for
     * <code>performance_schema.variables_metadata.VARIABLE_NAME</code>.
     */
    public VariablesMetadataRecord setVariableName(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for
     * <code>performance_schema.variables_metadata.VARIABLE_NAME</code>.
     */
    public String getVariableName() {
        return (String) get(0);
    }

    /**
     * Setter for
     * <code>performance_schema.variables_metadata.VARIABLE_SCOPE</code>.
     */
    public VariablesMetadataRecord setVariableScope(VariablesMetadataVariableScope value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for
     * <code>performance_schema.variables_metadata.VARIABLE_SCOPE</code>.
     */
    public VariablesMetadataVariableScope getVariableScope() {
        return (VariablesMetadataVariableScope) get(1);
    }

    /**
     * Setter for <code>performance_schema.variables_metadata.DATA_TYPE</code>.
     */
    public VariablesMetadataRecord setDataType(VariablesMetadataDataType value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>performance_schema.variables_metadata.DATA_TYPE</code>.
     */
    public VariablesMetadataDataType getDataType() {
        return (VariablesMetadataDataType) get(2);
    }

    /**
     * Setter for <code>performance_schema.variables_metadata.MIN_VALUE</code>.
     */
    public VariablesMetadataRecord setMinValue(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>performance_schema.variables_metadata.MIN_VALUE</code>.
     */
    public String getMinValue() {
        return (String) get(3);
    }

    /**
     * Setter for <code>performance_schema.variables_metadata.MAX_VALUE</code>.
     */
    public VariablesMetadataRecord setMaxValue(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>performance_schema.variables_metadata.MAX_VALUE</code>.
     */
    public String getMaxValue() {
        return (String) get(4);
    }

    /**
     * Setter for
     * <code>performance_schema.variables_metadata.DOCUMENTATION</code>.
     */
    public VariablesMetadataRecord setDocumentation(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for
     * <code>performance_schema.variables_metadata.DOCUMENTATION</code>.
     */
    public String getDocumentation() {
        return (String) get(5);
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<String, VariablesMetadataVariableScope, VariablesMetadataDataType, String, String, String> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<String, VariablesMetadataVariableScope, VariablesMetadataDataType, String, String, String> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return VariablesMetadata.VARIABLES_METADATA.VARIABLE_NAME;
    }

    @Override
    public Field<VariablesMetadataVariableScope> field2() {
        return VariablesMetadata.VARIABLES_METADATA.VARIABLE_SCOPE;
    }

    @Override
    public Field<VariablesMetadataDataType> field3() {
        return VariablesMetadata.VARIABLES_METADATA.DATA_TYPE;
    }

    @Override
    public Field<String> field4() {
        return VariablesMetadata.VARIABLES_METADATA.MIN_VALUE;
    }

    @Override
    public Field<String> field5() {
        return VariablesMetadata.VARIABLES_METADATA.MAX_VALUE;
    }

    @Override
    public Field<String> field6() {
        return VariablesMetadata.VARIABLES_METADATA.DOCUMENTATION;
    }

    @Override
    public String component1() {
        return getVariableName();
    }

    @Override
    public VariablesMetadataVariableScope component2() {
        return getVariableScope();
    }

    @Override
    public VariablesMetadataDataType component3() {
        return getDataType();
    }

    @Override
    public String component4() {
        return getMinValue();
    }

    @Override
    public String component5() {
        return getMaxValue();
    }

    @Override
    public String component6() {
        return getDocumentation();
    }

    @Override
    public String value1() {
        return getVariableName();
    }

    @Override
    public VariablesMetadataVariableScope value2() {
        return getVariableScope();
    }

    @Override
    public VariablesMetadataDataType value3() {
        return getDataType();
    }

    @Override
    public String value4() {
        return getMinValue();
    }

    @Override
    public String value5() {
        return getMaxValue();
    }

    @Override
    public String value6() {
        return getDocumentation();
    }

    @Override
    public VariablesMetadataRecord value1(String value) {
        setVariableName(value);
        return this;
    }

    @Override
    public VariablesMetadataRecord value2(VariablesMetadataVariableScope value) {
        setVariableScope(value);
        return this;
    }

    @Override
    public VariablesMetadataRecord value3(VariablesMetadataDataType value) {
        setDataType(value);
        return this;
    }

    @Override
    public VariablesMetadataRecord value4(String value) {
        setMinValue(value);
        return this;
    }

    @Override
    public VariablesMetadataRecord value5(String value) {
        setMaxValue(value);
        return this;
    }

    @Override
    public VariablesMetadataRecord value6(String value) {
        setDocumentation(value);
        return this;
    }

    @Override
    public VariablesMetadataRecord values(String value1, VariablesMetadataVariableScope value2, VariablesMetadataDataType value3, String value4, String value5, String value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached VariablesMetadataRecord
     */
    public VariablesMetadataRecord() {
        super(VariablesMetadata.VARIABLES_METADATA);
    }

    /**
     * Create a detached, initialised VariablesMetadataRecord
     */
    public VariablesMetadataRecord(String variableName, VariablesMetadataVariableScope variableScope, VariablesMetadataDataType dataType, String minValue, String maxValue, String documentation) {
        super(VariablesMetadata.VARIABLES_METADATA);

        setVariableName(variableName);
        setVariableScope(variableScope);
        setDataType(dataType);
        setMinValue(minValue);
        setMaxValue(maxValue);
        setDocumentation(documentation);
    }

    /**
     * Create a detached, initialised VariablesMetadataRecord
     */
    public VariablesMetadataRecord(com.neurasim.jooq.performance_schema.tables.pojos.VariablesMetadata value) {
        super(VariablesMetadata.VARIABLES_METADATA);

        if (value != null) {
            setVariableName(value.getVariableName());
            setVariableScope(value.getVariableScope());
            setDataType(value.getDataType());
            setMinValue(value.getMinValue());
            setMaxValue(value.getMaxValue());
            setDocumentation(value.getDocumentation());
        }
    }
}
