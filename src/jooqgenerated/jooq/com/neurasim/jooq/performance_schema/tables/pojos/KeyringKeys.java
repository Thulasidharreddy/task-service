/*
 * This file is generated by jOOQ.
 */
package com.neurasim.jooq.performance_schema.tables.pojos;


import java.io.Serializable;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class KeyringKeys implements Serializable {

    private static final long serialVersionUID = 1L;

    private final String keyId;
    private final String keyOwner;
    private final String backendKeyId;

    public KeyringKeys(KeyringKeys value) {
        this.keyId = value.keyId;
        this.keyOwner = value.keyOwner;
        this.backendKeyId = value.backendKeyId;
    }

    public KeyringKeys(
        String keyId,
        String keyOwner,
        String backendKeyId
    ) {
        this.keyId = keyId;
        this.keyOwner = keyOwner;
        this.backendKeyId = backendKeyId;
    }

    /**
     * Getter for <code>performance_schema.keyring_keys.KEY_ID</code>.
     */
    public String getKeyId() {
        return this.keyId;
    }

    /**
     * Getter for <code>performance_schema.keyring_keys.KEY_OWNER</code>.
     */
    public String getKeyOwner() {
        return this.keyOwner;
    }

    /**
     * Getter for <code>performance_schema.keyring_keys.BACKEND_KEY_ID</code>.
     */
    public String getBackendKeyId() {
        return this.backendKeyId;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final KeyringKeys other = (KeyringKeys) obj;
        if (this.keyId == null) {
            if (other.keyId != null)
                return false;
        }
        else if (!this.keyId.equals(other.keyId))
            return false;
        if (this.keyOwner == null) {
            if (other.keyOwner != null)
                return false;
        }
        else if (!this.keyOwner.equals(other.keyOwner))
            return false;
        if (this.backendKeyId == null) {
            if (other.backendKeyId != null)
                return false;
        }
        else if (!this.backendKeyId.equals(other.backendKeyId))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.keyId == null) ? 0 : this.keyId.hashCode());
        result = prime * result + ((this.keyOwner == null) ? 0 : this.keyOwner.hashCode());
        result = prime * result + ((this.backendKeyId == null) ? 0 : this.backendKeyId.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("KeyringKeys (");

        sb.append(keyId);
        sb.append(", ").append(keyOwner);
        sb.append(", ").append(backendKeyId);

        sb.append(")");
        return sb.toString();
    }
}
