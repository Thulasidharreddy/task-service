/*
 * This file is generated by jOOQ.
 */
package com.neurasim.jooq.performance_schema.tables.pojos;


import com.neurasim.jooq.performance_schema.enums.ReplicationApplierConfigurationAssignGtidsToAnonymousTransactionsType;
import com.neurasim.jooq.performance_schema.enums.ReplicationApplierConfigurationRequireRowFormat;
import com.neurasim.jooq.performance_schema.enums.ReplicationApplierConfigurationRequireTablePrimaryKeyCheck;

import java.io.Serializable;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ReplicationApplierConfiguration implements Serializable {

    private static final long serialVersionUID = 1L;

    private final String channelName;
    private final Integer desiredDelay;
    private final String privilegeChecksUser;
    private final ReplicationApplierConfigurationRequireRowFormat requireRowFormat;
    private final ReplicationApplierConfigurationRequireTablePrimaryKeyCheck requireTablePrimaryKeyCheck;
    private final ReplicationApplierConfigurationAssignGtidsToAnonymousTransactionsType assignGtidsToAnonymousTransactionsType;
    private final String assignGtidsToAnonymousTransactionsValue;

    public ReplicationApplierConfiguration(ReplicationApplierConfiguration value) {
        this.channelName = value.channelName;
        this.desiredDelay = value.desiredDelay;
        this.privilegeChecksUser = value.privilegeChecksUser;
        this.requireRowFormat = value.requireRowFormat;
        this.requireTablePrimaryKeyCheck = value.requireTablePrimaryKeyCheck;
        this.assignGtidsToAnonymousTransactionsType = value.assignGtidsToAnonymousTransactionsType;
        this.assignGtidsToAnonymousTransactionsValue = value.assignGtidsToAnonymousTransactionsValue;
    }

    public ReplicationApplierConfiguration(
        String channelName,
        Integer desiredDelay,
        String privilegeChecksUser,
        ReplicationApplierConfigurationRequireRowFormat requireRowFormat,
        ReplicationApplierConfigurationRequireTablePrimaryKeyCheck requireTablePrimaryKeyCheck,
        ReplicationApplierConfigurationAssignGtidsToAnonymousTransactionsType assignGtidsToAnonymousTransactionsType,
        String assignGtidsToAnonymousTransactionsValue
    ) {
        this.channelName = channelName;
        this.desiredDelay = desiredDelay;
        this.privilegeChecksUser = privilegeChecksUser;
        this.requireRowFormat = requireRowFormat;
        this.requireTablePrimaryKeyCheck = requireTablePrimaryKeyCheck;
        this.assignGtidsToAnonymousTransactionsType = assignGtidsToAnonymousTransactionsType;
        this.assignGtidsToAnonymousTransactionsValue = assignGtidsToAnonymousTransactionsValue;
    }

    /**
     * Getter for
     * <code>performance_schema.replication_applier_configuration.CHANNEL_NAME</code>.
     */
    public String getChannelName() {
        return this.channelName;
    }

    /**
     * Getter for
     * <code>performance_schema.replication_applier_configuration.DESIRED_DELAY</code>.
     */
    public Integer getDesiredDelay() {
        return this.desiredDelay;
    }

    /**
     * Getter for
     * <code>performance_schema.replication_applier_configuration.PRIVILEGE_CHECKS_USER</code>.
     * User name for the security context of the applier.
     */
    public String getPrivilegeChecksUser() {
        return this.privilegeChecksUser;
    }

    /**
     * Getter for
     * <code>performance_schema.replication_applier_configuration.REQUIRE_ROW_FORMAT</code>.
     * Indicates whether the channel shall only accept row based events.
     */
    public ReplicationApplierConfigurationRequireRowFormat getRequireRowFormat() {
        return this.requireRowFormat;
    }

    /**
     * Getter for
     * <code>performance_schema.replication_applier_configuration.REQUIRE_TABLE_PRIMARY_KEY_CHECK</code>.
     * Indicates what is the channel policy regarding tables without primary
     * keys on create and alter table queries
     */
    public ReplicationApplierConfigurationRequireTablePrimaryKeyCheck getRequireTablePrimaryKeyCheck() {
        return this.requireTablePrimaryKeyCheck;
    }

    /**
     * Getter for
     * <code>performance_schema.replication_applier_configuration.ASSIGN_GTIDS_TO_ANONYMOUS_TRANSACTIONS_TYPE</code>.
     * Indicates whether the channel will generate a new GTID for anonymous
     * transactions. OFF means that anonymous transactions will remain
     * anonymous. LOCAL means that anonymous transactions will be assigned a
     * newly generated GTID based on server_uuid. UUID indicates that anonymous
     * transactions will be assigned a newly generated GTID based on
     * Assign_gtids_to_anonymous_transactions_value
     */
    public ReplicationApplierConfigurationAssignGtidsToAnonymousTransactionsType getAssignGtidsToAnonymousTransactionsType() {
        return this.assignGtidsToAnonymousTransactionsType;
    }

    /**
     * Getter for
     * <code>performance_schema.replication_applier_configuration.ASSIGN_GTIDS_TO_ANONYMOUS_TRANSACTIONS_VALUE</code>.
     * Indicates the UUID used while generating GTIDs for anonymous transactions
     */
    public String getAssignGtidsToAnonymousTransactionsValue() {
        return this.assignGtidsToAnonymousTransactionsValue;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final ReplicationApplierConfiguration other = (ReplicationApplierConfiguration) obj;
        if (this.channelName == null) {
            if (other.channelName != null)
                return false;
        }
        else if (!this.channelName.equals(other.channelName))
            return false;
        if (this.desiredDelay == null) {
            if (other.desiredDelay != null)
                return false;
        }
        else if (!this.desiredDelay.equals(other.desiredDelay))
            return false;
        if (this.privilegeChecksUser == null) {
            if (other.privilegeChecksUser != null)
                return false;
        }
        else if (!this.privilegeChecksUser.equals(other.privilegeChecksUser))
            return false;
        if (this.requireRowFormat == null) {
            if (other.requireRowFormat != null)
                return false;
        }
        else if (!this.requireRowFormat.equals(other.requireRowFormat))
            return false;
        if (this.requireTablePrimaryKeyCheck == null) {
            if (other.requireTablePrimaryKeyCheck != null)
                return false;
        }
        else if (!this.requireTablePrimaryKeyCheck.equals(other.requireTablePrimaryKeyCheck))
            return false;
        if (this.assignGtidsToAnonymousTransactionsType == null) {
            if (other.assignGtidsToAnonymousTransactionsType != null)
                return false;
        }
        else if (!this.assignGtidsToAnonymousTransactionsType.equals(other.assignGtidsToAnonymousTransactionsType))
            return false;
        if (this.assignGtidsToAnonymousTransactionsValue == null) {
            if (other.assignGtidsToAnonymousTransactionsValue != null)
                return false;
        }
        else if (!this.assignGtidsToAnonymousTransactionsValue.equals(other.assignGtidsToAnonymousTransactionsValue))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.channelName == null) ? 0 : this.channelName.hashCode());
        result = prime * result + ((this.desiredDelay == null) ? 0 : this.desiredDelay.hashCode());
        result = prime * result + ((this.privilegeChecksUser == null) ? 0 : this.privilegeChecksUser.hashCode());
        result = prime * result + ((this.requireRowFormat == null) ? 0 : this.requireRowFormat.hashCode());
        result = prime * result + ((this.requireTablePrimaryKeyCheck == null) ? 0 : this.requireTablePrimaryKeyCheck.hashCode());
        result = prime * result + ((this.assignGtidsToAnonymousTransactionsType == null) ? 0 : this.assignGtidsToAnonymousTransactionsType.hashCode());
        result = prime * result + ((this.assignGtidsToAnonymousTransactionsValue == null) ? 0 : this.assignGtidsToAnonymousTransactionsValue.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("ReplicationApplierConfiguration (");

        sb.append(channelName);
        sb.append(", ").append(desiredDelay);
        sb.append(", ").append(privilegeChecksUser);
        sb.append(", ").append(requireRowFormat);
        sb.append(", ").append(requireTablePrimaryKeyCheck);
        sb.append(", ").append(assignGtidsToAnonymousTransactionsType);
        sb.append(", ").append(assignGtidsToAnonymousTransactionsValue);

        sb.append(")");
        return sb.toString();
    }
}
