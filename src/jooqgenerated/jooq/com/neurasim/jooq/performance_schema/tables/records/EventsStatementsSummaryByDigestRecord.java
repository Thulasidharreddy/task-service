/*
 * This file is generated by jOOQ.
 */
package com.neurasim.jooq.performance_schema.tables.records;


import com.neurasim.jooq.performance_schema.tables.EventsStatementsSummaryByDigest;

import java.time.LocalDateTime;

import org.jooq.impl.TableRecordImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EventsStatementsSummaryByDigestRecord extends TableRecordImpl<EventsStatementsSummaryByDigestRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for
     * <code>performance_schema.events_statements_summary_by_digest.SCHEMA_NAME</code>.
     */
    public EventsStatementsSummaryByDigestRecord setSchemaName(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for
     * <code>performance_schema.events_statements_summary_by_digest.SCHEMA_NAME</code>.
     */
    public String getSchemaName() {
        return (String) get(0);
    }

    /**
     * Setter for
     * <code>performance_schema.events_statements_summary_by_digest.DIGEST</code>.
     */
    public EventsStatementsSummaryByDigestRecord setDigest(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for
     * <code>performance_schema.events_statements_summary_by_digest.DIGEST</code>.
     */
    public String getDigest() {
        return (String) get(1);
    }

    /**
     * Setter for
     * <code>performance_schema.events_statements_summary_by_digest.DIGEST_TEXT</code>.
     */
    public EventsStatementsSummaryByDigestRecord setDigestText(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for
     * <code>performance_schema.events_statements_summary_by_digest.DIGEST_TEXT</code>.
     */
    public String getDigestText() {
        return (String) get(2);
    }

    /**
     * Setter for
     * <code>performance_schema.events_statements_summary_by_digest.COUNT_STAR</code>.
     */
    public EventsStatementsSummaryByDigestRecord setCountStar(ULong value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for
     * <code>performance_schema.events_statements_summary_by_digest.COUNT_STAR</code>.
     */
    public ULong getCountStar() {
        return (ULong) get(3);
    }

    /**
     * Setter for
     * <code>performance_schema.events_statements_summary_by_digest.SUM_TIMER_WAIT</code>.
     */
    public EventsStatementsSummaryByDigestRecord setSumTimerWait(ULong value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for
     * <code>performance_schema.events_statements_summary_by_digest.SUM_TIMER_WAIT</code>.
     */
    public ULong getSumTimerWait() {
        return (ULong) get(4);
    }

    /**
     * Setter for
     * <code>performance_schema.events_statements_summary_by_digest.MIN_TIMER_WAIT</code>.
     */
    public EventsStatementsSummaryByDigestRecord setMinTimerWait(ULong value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for
     * <code>performance_schema.events_statements_summary_by_digest.MIN_TIMER_WAIT</code>.
     */
    public ULong getMinTimerWait() {
        return (ULong) get(5);
    }

    /**
     * Setter for
     * <code>performance_schema.events_statements_summary_by_digest.AVG_TIMER_WAIT</code>.
     */
    public EventsStatementsSummaryByDigestRecord setAvgTimerWait(ULong value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for
     * <code>performance_schema.events_statements_summary_by_digest.AVG_TIMER_WAIT</code>.
     */
    public ULong getAvgTimerWait() {
        return (ULong) get(6);
    }

    /**
     * Setter for
     * <code>performance_schema.events_statements_summary_by_digest.MAX_TIMER_WAIT</code>.
     */
    public EventsStatementsSummaryByDigestRecord setMaxTimerWait(ULong value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for
     * <code>performance_schema.events_statements_summary_by_digest.MAX_TIMER_WAIT</code>.
     */
    public ULong getMaxTimerWait() {
        return (ULong) get(7);
    }

    /**
     * Setter for
     * <code>performance_schema.events_statements_summary_by_digest.SUM_LOCK_TIME</code>.
     */
    public EventsStatementsSummaryByDigestRecord setSumLockTime(ULong value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for
     * <code>performance_schema.events_statements_summary_by_digest.SUM_LOCK_TIME</code>.
     */
    public ULong getSumLockTime() {
        return (ULong) get(8);
    }

    /**
     * Setter for
     * <code>performance_schema.events_statements_summary_by_digest.SUM_ERRORS</code>.
     */
    public EventsStatementsSummaryByDigestRecord setSumErrors(ULong value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for
     * <code>performance_schema.events_statements_summary_by_digest.SUM_ERRORS</code>.
     */
    public ULong getSumErrors() {
        return (ULong) get(9);
    }

    /**
     * Setter for
     * <code>performance_schema.events_statements_summary_by_digest.SUM_WARNINGS</code>.
     */
    public EventsStatementsSummaryByDigestRecord setSumWarnings(ULong value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for
     * <code>performance_schema.events_statements_summary_by_digest.SUM_WARNINGS</code>.
     */
    public ULong getSumWarnings() {
        return (ULong) get(10);
    }

    /**
     * Setter for
     * <code>performance_schema.events_statements_summary_by_digest.SUM_ROWS_AFFECTED</code>.
     */
    public EventsStatementsSummaryByDigestRecord setSumRowsAffected(ULong value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for
     * <code>performance_schema.events_statements_summary_by_digest.SUM_ROWS_AFFECTED</code>.
     */
    public ULong getSumRowsAffected() {
        return (ULong) get(11);
    }

    /**
     * Setter for
     * <code>performance_schema.events_statements_summary_by_digest.SUM_ROWS_SENT</code>.
     */
    public EventsStatementsSummaryByDigestRecord setSumRowsSent(ULong value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for
     * <code>performance_schema.events_statements_summary_by_digest.SUM_ROWS_SENT</code>.
     */
    public ULong getSumRowsSent() {
        return (ULong) get(12);
    }

    /**
     * Setter for
     * <code>performance_schema.events_statements_summary_by_digest.SUM_ROWS_EXAMINED</code>.
     */
    public EventsStatementsSummaryByDigestRecord setSumRowsExamined(ULong value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for
     * <code>performance_schema.events_statements_summary_by_digest.SUM_ROWS_EXAMINED</code>.
     */
    public ULong getSumRowsExamined() {
        return (ULong) get(13);
    }

    /**
     * Setter for
     * <code>performance_schema.events_statements_summary_by_digest.SUM_CREATED_TMP_DISK_TABLES</code>.
     */
    public EventsStatementsSummaryByDigestRecord setSumCreatedTmpDiskTables(ULong value) {
        set(14, value);
        return this;
    }

    /**
     * Getter for
     * <code>performance_schema.events_statements_summary_by_digest.SUM_CREATED_TMP_DISK_TABLES</code>.
     */
    public ULong getSumCreatedTmpDiskTables() {
        return (ULong) get(14);
    }

    /**
     * Setter for
     * <code>performance_schema.events_statements_summary_by_digest.SUM_CREATED_TMP_TABLES</code>.
     */
    public EventsStatementsSummaryByDigestRecord setSumCreatedTmpTables(ULong value) {
        set(15, value);
        return this;
    }

    /**
     * Getter for
     * <code>performance_schema.events_statements_summary_by_digest.SUM_CREATED_TMP_TABLES</code>.
     */
    public ULong getSumCreatedTmpTables() {
        return (ULong) get(15);
    }

    /**
     * Setter for
     * <code>performance_schema.events_statements_summary_by_digest.SUM_SELECT_FULL_JOIN</code>.
     */
    public EventsStatementsSummaryByDigestRecord setSumSelectFullJoin(ULong value) {
        set(16, value);
        return this;
    }

    /**
     * Getter for
     * <code>performance_schema.events_statements_summary_by_digest.SUM_SELECT_FULL_JOIN</code>.
     */
    public ULong getSumSelectFullJoin() {
        return (ULong) get(16);
    }

    /**
     * Setter for
     * <code>performance_schema.events_statements_summary_by_digest.SUM_SELECT_FULL_RANGE_JOIN</code>.
     */
    public EventsStatementsSummaryByDigestRecord setSumSelectFullRangeJoin(ULong value) {
        set(17, value);
        return this;
    }

    /**
     * Getter for
     * <code>performance_schema.events_statements_summary_by_digest.SUM_SELECT_FULL_RANGE_JOIN</code>.
     */
    public ULong getSumSelectFullRangeJoin() {
        return (ULong) get(17);
    }

    /**
     * Setter for
     * <code>performance_schema.events_statements_summary_by_digest.SUM_SELECT_RANGE</code>.
     */
    public EventsStatementsSummaryByDigestRecord setSumSelectRange(ULong value) {
        set(18, value);
        return this;
    }

    /**
     * Getter for
     * <code>performance_schema.events_statements_summary_by_digest.SUM_SELECT_RANGE</code>.
     */
    public ULong getSumSelectRange() {
        return (ULong) get(18);
    }

    /**
     * Setter for
     * <code>performance_schema.events_statements_summary_by_digest.SUM_SELECT_RANGE_CHECK</code>.
     */
    public EventsStatementsSummaryByDigestRecord setSumSelectRangeCheck(ULong value) {
        set(19, value);
        return this;
    }

    /**
     * Getter for
     * <code>performance_schema.events_statements_summary_by_digest.SUM_SELECT_RANGE_CHECK</code>.
     */
    public ULong getSumSelectRangeCheck() {
        return (ULong) get(19);
    }

    /**
     * Setter for
     * <code>performance_schema.events_statements_summary_by_digest.SUM_SELECT_SCAN</code>.
     */
    public EventsStatementsSummaryByDigestRecord setSumSelectScan(ULong value) {
        set(20, value);
        return this;
    }

    /**
     * Getter for
     * <code>performance_schema.events_statements_summary_by_digest.SUM_SELECT_SCAN</code>.
     */
    public ULong getSumSelectScan() {
        return (ULong) get(20);
    }

    /**
     * Setter for
     * <code>performance_schema.events_statements_summary_by_digest.SUM_SORT_MERGE_PASSES</code>.
     */
    public EventsStatementsSummaryByDigestRecord setSumSortMergePasses(ULong value) {
        set(21, value);
        return this;
    }

    /**
     * Getter for
     * <code>performance_schema.events_statements_summary_by_digest.SUM_SORT_MERGE_PASSES</code>.
     */
    public ULong getSumSortMergePasses() {
        return (ULong) get(21);
    }

    /**
     * Setter for
     * <code>performance_schema.events_statements_summary_by_digest.SUM_SORT_RANGE</code>.
     */
    public EventsStatementsSummaryByDigestRecord setSumSortRange(ULong value) {
        set(22, value);
        return this;
    }

    /**
     * Getter for
     * <code>performance_schema.events_statements_summary_by_digest.SUM_SORT_RANGE</code>.
     */
    public ULong getSumSortRange() {
        return (ULong) get(22);
    }

    /**
     * Setter for
     * <code>performance_schema.events_statements_summary_by_digest.SUM_SORT_ROWS</code>.
     */
    public EventsStatementsSummaryByDigestRecord setSumSortRows(ULong value) {
        set(23, value);
        return this;
    }

    /**
     * Getter for
     * <code>performance_schema.events_statements_summary_by_digest.SUM_SORT_ROWS</code>.
     */
    public ULong getSumSortRows() {
        return (ULong) get(23);
    }

    /**
     * Setter for
     * <code>performance_schema.events_statements_summary_by_digest.SUM_SORT_SCAN</code>.
     */
    public EventsStatementsSummaryByDigestRecord setSumSortScan(ULong value) {
        set(24, value);
        return this;
    }

    /**
     * Getter for
     * <code>performance_schema.events_statements_summary_by_digest.SUM_SORT_SCAN</code>.
     */
    public ULong getSumSortScan() {
        return (ULong) get(24);
    }

    /**
     * Setter for
     * <code>performance_schema.events_statements_summary_by_digest.SUM_NO_INDEX_USED</code>.
     */
    public EventsStatementsSummaryByDigestRecord setSumNoIndexUsed(ULong value) {
        set(25, value);
        return this;
    }

    /**
     * Getter for
     * <code>performance_schema.events_statements_summary_by_digest.SUM_NO_INDEX_USED</code>.
     */
    public ULong getSumNoIndexUsed() {
        return (ULong) get(25);
    }

    /**
     * Setter for
     * <code>performance_schema.events_statements_summary_by_digest.SUM_NO_GOOD_INDEX_USED</code>.
     */
    public EventsStatementsSummaryByDigestRecord setSumNoGoodIndexUsed(ULong value) {
        set(26, value);
        return this;
    }

    /**
     * Getter for
     * <code>performance_schema.events_statements_summary_by_digest.SUM_NO_GOOD_INDEX_USED</code>.
     */
    public ULong getSumNoGoodIndexUsed() {
        return (ULong) get(26);
    }

    /**
     * Setter for
     * <code>performance_schema.events_statements_summary_by_digest.SUM_CPU_TIME</code>.
     */
    public EventsStatementsSummaryByDigestRecord setSumCpuTime(ULong value) {
        set(27, value);
        return this;
    }

    /**
     * Getter for
     * <code>performance_schema.events_statements_summary_by_digest.SUM_CPU_TIME</code>.
     */
    public ULong getSumCpuTime() {
        return (ULong) get(27);
    }

    /**
     * Setter for
     * <code>performance_schema.events_statements_summary_by_digest.MAX_CONTROLLED_MEMORY</code>.
     */
    public EventsStatementsSummaryByDigestRecord setMaxControlledMemory(ULong value) {
        set(28, value);
        return this;
    }

    /**
     * Getter for
     * <code>performance_schema.events_statements_summary_by_digest.MAX_CONTROLLED_MEMORY</code>.
     */
    public ULong getMaxControlledMemory() {
        return (ULong) get(28);
    }

    /**
     * Setter for
     * <code>performance_schema.events_statements_summary_by_digest.MAX_TOTAL_MEMORY</code>.
     */
    public EventsStatementsSummaryByDigestRecord setMaxTotalMemory(ULong value) {
        set(29, value);
        return this;
    }

    /**
     * Getter for
     * <code>performance_schema.events_statements_summary_by_digest.MAX_TOTAL_MEMORY</code>.
     */
    public ULong getMaxTotalMemory() {
        return (ULong) get(29);
    }

    /**
     * Setter for
     * <code>performance_schema.events_statements_summary_by_digest.COUNT_SECONDARY</code>.
     */
    public EventsStatementsSummaryByDigestRecord setCountSecondary(ULong value) {
        set(30, value);
        return this;
    }

    /**
     * Getter for
     * <code>performance_schema.events_statements_summary_by_digest.COUNT_SECONDARY</code>.
     */
    public ULong getCountSecondary() {
        return (ULong) get(30);
    }

    /**
     * Setter for
     * <code>performance_schema.events_statements_summary_by_digest.FIRST_SEEN</code>.
     */
    public EventsStatementsSummaryByDigestRecord setFirstSeen(LocalDateTime value) {
        set(31, value);
        return this;
    }

    /**
     * Getter for
     * <code>performance_schema.events_statements_summary_by_digest.FIRST_SEEN</code>.
     */
    public LocalDateTime getFirstSeen() {
        return (LocalDateTime) get(31);
    }

    /**
     * Setter for
     * <code>performance_schema.events_statements_summary_by_digest.LAST_SEEN</code>.
     */
    public EventsStatementsSummaryByDigestRecord setLastSeen(LocalDateTime value) {
        set(32, value);
        return this;
    }

    /**
     * Getter for
     * <code>performance_schema.events_statements_summary_by_digest.LAST_SEEN</code>.
     */
    public LocalDateTime getLastSeen() {
        return (LocalDateTime) get(32);
    }

    /**
     * Setter for
     * <code>performance_schema.events_statements_summary_by_digest.QUANTILE_95</code>.
     */
    public EventsStatementsSummaryByDigestRecord setQuantile_95(ULong value) {
        set(33, value);
        return this;
    }

    /**
     * Getter for
     * <code>performance_schema.events_statements_summary_by_digest.QUANTILE_95</code>.
     */
    public ULong getQuantile_95() {
        return (ULong) get(33);
    }

    /**
     * Setter for
     * <code>performance_schema.events_statements_summary_by_digest.QUANTILE_99</code>.
     */
    public EventsStatementsSummaryByDigestRecord setQuantile_99(ULong value) {
        set(34, value);
        return this;
    }

    /**
     * Getter for
     * <code>performance_schema.events_statements_summary_by_digest.QUANTILE_99</code>.
     */
    public ULong getQuantile_99() {
        return (ULong) get(34);
    }

    /**
     * Setter for
     * <code>performance_schema.events_statements_summary_by_digest.QUANTILE_999</code>.
     */
    public EventsStatementsSummaryByDigestRecord setQuantile_999(ULong value) {
        set(35, value);
        return this;
    }

    /**
     * Getter for
     * <code>performance_schema.events_statements_summary_by_digest.QUANTILE_999</code>.
     */
    public ULong getQuantile_999() {
        return (ULong) get(35);
    }

    /**
     * Setter for
     * <code>performance_schema.events_statements_summary_by_digest.QUERY_SAMPLE_TEXT</code>.
     */
    public EventsStatementsSummaryByDigestRecord setQuerySampleText(String value) {
        set(36, value);
        return this;
    }

    /**
     * Getter for
     * <code>performance_schema.events_statements_summary_by_digest.QUERY_SAMPLE_TEXT</code>.
     */
    public String getQuerySampleText() {
        return (String) get(36);
    }

    /**
     * Setter for
     * <code>performance_schema.events_statements_summary_by_digest.QUERY_SAMPLE_SEEN</code>.
     */
    public EventsStatementsSummaryByDigestRecord setQuerySampleSeen(LocalDateTime value) {
        set(37, value);
        return this;
    }

    /**
     * Getter for
     * <code>performance_schema.events_statements_summary_by_digest.QUERY_SAMPLE_SEEN</code>.
     */
    public LocalDateTime getQuerySampleSeen() {
        return (LocalDateTime) get(37);
    }

    /**
     * Setter for
     * <code>performance_schema.events_statements_summary_by_digest.QUERY_SAMPLE_TIMER_WAIT</code>.
     */
    public EventsStatementsSummaryByDigestRecord setQuerySampleTimerWait(ULong value) {
        set(38, value);
        return this;
    }

    /**
     * Getter for
     * <code>performance_schema.events_statements_summary_by_digest.QUERY_SAMPLE_TIMER_WAIT</code>.
     */
    public ULong getQuerySampleTimerWait() {
        return (ULong) get(38);
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached EventsStatementsSummaryByDigestRecord
     */
    public EventsStatementsSummaryByDigestRecord() {
        super(EventsStatementsSummaryByDigest.EVENTS_STATEMENTS_SUMMARY_BY_DIGEST);
    }

    /**
     * Create a detached, initialised EventsStatementsSummaryByDigestRecord
     */
    public EventsStatementsSummaryByDigestRecord(String schemaName, String digest, String digestText, ULong countStar, ULong sumTimerWait, ULong minTimerWait, ULong avgTimerWait, ULong maxTimerWait, ULong sumLockTime, ULong sumErrors, ULong sumWarnings, ULong sumRowsAffected, ULong sumRowsSent, ULong sumRowsExamined, ULong sumCreatedTmpDiskTables, ULong sumCreatedTmpTables, ULong sumSelectFullJoin, ULong sumSelectFullRangeJoin, ULong sumSelectRange, ULong sumSelectRangeCheck, ULong sumSelectScan, ULong sumSortMergePasses, ULong sumSortRange, ULong sumSortRows, ULong sumSortScan, ULong sumNoIndexUsed, ULong sumNoGoodIndexUsed, ULong sumCpuTime, ULong maxControlledMemory, ULong maxTotalMemory, ULong countSecondary, LocalDateTime firstSeen, LocalDateTime lastSeen, ULong quantile_95, ULong quantile_99, ULong quantile_999, String querySampleText, LocalDateTime querySampleSeen, ULong querySampleTimerWait) {
        super(EventsStatementsSummaryByDigest.EVENTS_STATEMENTS_SUMMARY_BY_DIGEST);

        setSchemaName(schemaName);
        setDigest(digest);
        setDigestText(digestText);
        setCountStar(countStar);
        setSumTimerWait(sumTimerWait);
        setMinTimerWait(minTimerWait);
        setAvgTimerWait(avgTimerWait);
        setMaxTimerWait(maxTimerWait);
        setSumLockTime(sumLockTime);
        setSumErrors(sumErrors);
        setSumWarnings(sumWarnings);
        setSumRowsAffected(sumRowsAffected);
        setSumRowsSent(sumRowsSent);
        setSumRowsExamined(sumRowsExamined);
        setSumCreatedTmpDiskTables(sumCreatedTmpDiskTables);
        setSumCreatedTmpTables(sumCreatedTmpTables);
        setSumSelectFullJoin(sumSelectFullJoin);
        setSumSelectFullRangeJoin(sumSelectFullRangeJoin);
        setSumSelectRange(sumSelectRange);
        setSumSelectRangeCheck(sumSelectRangeCheck);
        setSumSelectScan(sumSelectScan);
        setSumSortMergePasses(sumSortMergePasses);
        setSumSortRange(sumSortRange);
        setSumSortRows(sumSortRows);
        setSumSortScan(sumSortScan);
        setSumNoIndexUsed(sumNoIndexUsed);
        setSumNoGoodIndexUsed(sumNoGoodIndexUsed);
        setSumCpuTime(sumCpuTime);
        setMaxControlledMemory(maxControlledMemory);
        setMaxTotalMemory(maxTotalMemory);
        setCountSecondary(countSecondary);
        setFirstSeen(firstSeen);
        setLastSeen(lastSeen);
        setQuantile_95(quantile_95);
        setQuantile_99(quantile_99);
        setQuantile_999(quantile_999);
        setQuerySampleText(querySampleText);
        setQuerySampleSeen(querySampleSeen);
        setQuerySampleTimerWait(querySampleTimerWait);
    }

    /**
     * Create a detached, initialised EventsStatementsSummaryByDigestRecord
     */
    public EventsStatementsSummaryByDigestRecord(com.neurasim.jooq.performance_schema.tables.pojos.EventsStatementsSummaryByDigest value) {
        super(EventsStatementsSummaryByDigest.EVENTS_STATEMENTS_SUMMARY_BY_DIGEST);

        if (value != null) {
            setSchemaName(value.getSchemaName());
            setDigest(value.getDigest());
            setDigestText(value.getDigestText());
            setCountStar(value.getCountStar());
            setSumTimerWait(value.getSumTimerWait());
            setMinTimerWait(value.getMinTimerWait());
            setAvgTimerWait(value.getAvgTimerWait());
            setMaxTimerWait(value.getMaxTimerWait());
            setSumLockTime(value.getSumLockTime());
            setSumErrors(value.getSumErrors());
            setSumWarnings(value.getSumWarnings());
            setSumRowsAffected(value.getSumRowsAffected());
            setSumRowsSent(value.getSumRowsSent());
            setSumRowsExamined(value.getSumRowsExamined());
            setSumCreatedTmpDiskTables(value.getSumCreatedTmpDiskTables());
            setSumCreatedTmpTables(value.getSumCreatedTmpTables());
            setSumSelectFullJoin(value.getSumSelectFullJoin());
            setSumSelectFullRangeJoin(value.getSumSelectFullRangeJoin());
            setSumSelectRange(value.getSumSelectRange());
            setSumSelectRangeCheck(value.getSumSelectRangeCheck());
            setSumSelectScan(value.getSumSelectScan());
            setSumSortMergePasses(value.getSumSortMergePasses());
            setSumSortRange(value.getSumSortRange());
            setSumSortRows(value.getSumSortRows());
            setSumSortScan(value.getSumSortScan());
            setSumNoIndexUsed(value.getSumNoIndexUsed());
            setSumNoGoodIndexUsed(value.getSumNoGoodIndexUsed());
            setSumCpuTime(value.getSumCpuTime());
            setMaxControlledMemory(value.getMaxControlledMemory());
            setMaxTotalMemory(value.getMaxTotalMemory());
            setCountSecondary(value.getCountSecondary());
            setFirstSeen(value.getFirstSeen());
            setLastSeen(value.getLastSeen());
            setQuantile_95(value.getQuantile_95());
            setQuantile_99(value.getQuantile_99());
            setQuantile_999(value.getQuantile_999());
            setQuerySampleText(value.getQuerySampleText());
            setQuerySampleSeen(value.getQuerySampleSeen());
            setQuerySampleTimerWait(value.getQuerySampleTimerWait());
        }
    }
}
