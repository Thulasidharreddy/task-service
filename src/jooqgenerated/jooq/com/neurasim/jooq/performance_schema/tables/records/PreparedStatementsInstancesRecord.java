/*
 * This file is generated by jOOQ.
 */
package com.neurasim.jooq.performance_schema.tables.records;


import com.neurasim.jooq.performance_schema.enums.PreparedStatementsInstancesExecutionEngine;
import com.neurasim.jooq.performance_schema.enums.PreparedStatementsInstancesOwnerObjectType;
import com.neurasim.jooq.performance_schema.tables.PreparedStatementsInstances;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PreparedStatementsInstancesRecord extends UpdatableRecordImpl<PreparedStatementsInstancesRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for
     * <code>performance_schema.prepared_statements_instances.OBJECT_INSTANCE_BEGIN</code>.
     */
    public PreparedStatementsInstancesRecord setObjectInstanceBegin(ULong value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for
     * <code>performance_schema.prepared_statements_instances.OBJECT_INSTANCE_BEGIN</code>.
     */
    public ULong getObjectInstanceBegin() {
        return (ULong) get(0);
    }

    /**
     * Setter for
     * <code>performance_schema.prepared_statements_instances.STATEMENT_ID</code>.
     */
    public PreparedStatementsInstancesRecord setStatementId(ULong value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for
     * <code>performance_schema.prepared_statements_instances.STATEMENT_ID</code>.
     */
    public ULong getStatementId() {
        return (ULong) get(1);
    }

    /**
     * Setter for
     * <code>performance_schema.prepared_statements_instances.STATEMENT_NAME</code>.
     */
    public PreparedStatementsInstancesRecord setStatementName(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for
     * <code>performance_schema.prepared_statements_instances.STATEMENT_NAME</code>.
     */
    public String getStatementName() {
        return (String) get(2);
    }

    /**
     * Setter for
     * <code>performance_schema.prepared_statements_instances.SQL_TEXT</code>.
     */
    public PreparedStatementsInstancesRecord setSqlText(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for
     * <code>performance_schema.prepared_statements_instances.SQL_TEXT</code>.
     */
    public String getSqlText() {
        return (String) get(3);
    }

    /**
     * Setter for
     * <code>performance_schema.prepared_statements_instances.OWNER_THREAD_ID</code>.
     */
    public PreparedStatementsInstancesRecord setOwnerThreadId(ULong value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for
     * <code>performance_schema.prepared_statements_instances.OWNER_THREAD_ID</code>.
     */
    public ULong getOwnerThreadId() {
        return (ULong) get(4);
    }

    /**
     * Setter for
     * <code>performance_schema.prepared_statements_instances.OWNER_EVENT_ID</code>.
     */
    public PreparedStatementsInstancesRecord setOwnerEventId(ULong value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for
     * <code>performance_schema.prepared_statements_instances.OWNER_EVENT_ID</code>.
     */
    public ULong getOwnerEventId() {
        return (ULong) get(5);
    }

    /**
     * Setter for
     * <code>performance_schema.prepared_statements_instances.OWNER_OBJECT_TYPE</code>.
     */
    public PreparedStatementsInstancesRecord setOwnerObjectType(PreparedStatementsInstancesOwnerObjectType value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for
     * <code>performance_schema.prepared_statements_instances.OWNER_OBJECT_TYPE</code>.
     */
    public PreparedStatementsInstancesOwnerObjectType getOwnerObjectType() {
        return (PreparedStatementsInstancesOwnerObjectType) get(6);
    }

    /**
     * Setter for
     * <code>performance_schema.prepared_statements_instances.OWNER_OBJECT_SCHEMA</code>.
     */
    public PreparedStatementsInstancesRecord setOwnerObjectSchema(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for
     * <code>performance_schema.prepared_statements_instances.OWNER_OBJECT_SCHEMA</code>.
     */
    public String getOwnerObjectSchema() {
        return (String) get(7);
    }

    /**
     * Setter for
     * <code>performance_schema.prepared_statements_instances.OWNER_OBJECT_NAME</code>.
     */
    public PreparedStatementsInstancesRecord setOwnerObjectName(String value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for
     * <code>performance_schema.prepared_statements_instances.OWNER_OBJECT_NAME</code>.
     */
    public String getOwnerObjectName() {
        return (String) get(8);
    }

    /**
     * Setter for
     * <code>performance_schema.prepared_statements_instances.EXECUTION_ENGINE</code>.
     */
    public PreparedStatementsInstancesRecord setExecutionEngine(PreparedStatementsInstancesExecutionEngine value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for
     * <code>performance_schema.prepared_statements_instances.EXECUTION_ENGINE</code>.
     */
    public PreparedStatementsInstancesExecutionEngine getExecutionEngine() {
        return (PreparedStatementsInstancesExecutionEngine) get(9);
    }

    /**
     * Setter for
     * <code>performance_schema.prepared_statements_instances.TIMER_PREPARE</code>.
     */
    public PreparedStatementsInstancesRecord setTimerPrepare(ULong value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for
     * <code>performance_schema.prepared_statements_instances.TIMER_PREPARE</code>.
     */
    public ULong getTimerPrepare() {
        return (ULong) get(10);
    }

    /**
     * Setter for
     * <code>performance_schema.prepared_statements_instances.COUNT_REPREPARE</code>.
     */
    public PreparedStatementsInstancesRecord setCountReprepare(ULong value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for
     * <code>performance_schema.prepared_statements_instances.COUNT_REPREPARE</code>.
     */
    public ULong getCountReprepare() {
        return (ULong) get(11);
    }

    /**
     * Setter for
     * <code>performance_schema.prepared_statements_instances.COUNT_EXECUTE</code>.
     */
    public PreparedStatementsInstancesRecord setCountExecute(ULong value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for
     * <code>performance_schema.prepared_statements_instances.COUNT_EXECUTE</code>.
     */
    public ULong getCountExecute() {
        return (ULong) get(12);
    }

    /**
     * Setter for
     * <code>performance_schema.prepared_statements_instances.SUM_TIMER_EXECUTE</code>.
     */
    public PreparedStatementsInstancesRecord setSumTimerExecute(ULong value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for
     * <code>performance_schema.prepared_statements_instances.SUM_TIMER_EXECUTE</code>.
     */
    public ULong getSumTimerExecute() {
        return (ULong) get(13);
    }

    /**
     * Setter for
     * <code>performance_schema.prepared_statements_instances.MIN_TIMER_EXECUTE</code>.
     */
    public PreparedStatementsInstancesRecord setMinTimerExecute(ULong value) {
        set(14, value);
        return this;
    }

    /**
     * Getter for
     * <code>performance_schema.prepared_statements_instances.MIN_TIMER_EXECUTE</code>.
     */
    public ULong getMinTimerExecute() {
        return (ULong) get(14);
    }

    /**
     * Setter for
     * <code>performance_schema.prepared_statements_instances.AVG_TIMER_EXECUTE</code>.
     */
    public PreparedStatementsInstancesRecord setAvgTimerExecute(ULong value) {
        set(15, value);
        return this;
    }

    /**
     * Getter for
     * <code>performance_schema.prepared_statements_instances.AVG_TIMER_EXECUTE</code>.
     */
    public ULong getAvgTimerExecute() {
        return (ULong) get(15);
    }

    /**
     * Setter for
     * <code>performance_schema.prepared_statements_instances.MAX_TIMER_EXECUTE</code>.
     */
    public PreparedStatementsInstancesRecord setMaxTimerExecute(ULong value) {
        set(16, value);
        return this;
    }

    /**
     * Getter for
     * <code>performance_schema.prepared_statements_instances.MAX_TIMER_EXECUTE</code>.
     */
    public ULong getMaxTimerExecute() {
        return (ULong) get(16);
    }

    /**
     * Setter for
     * <code>performance_schema.prepared_statements_instances.SUM_LOCK_TIME</code>.
     */
    public PreparedStatementsInstancesRecord setSumLockTime(ULong value) {
        set(17, value);
        return this;
    }

    /**
     * Getter for
     * <code>performance_schema.prepared_statements_instances.SUM_LOCK_TIME</code>.
     */
    public ULong getSumLockTime() {
        return (ULong) get(17);
    }

    /**
     * Setter for
     * <code>performance_schema.prepared_statements_instances.SUM_ERRORS</code>.
     */
    public PreparedStatementsInstancesRecord setSumErrors(ULong value) {
        set(18, value);
        return this;
    }

    /**
     * Getter for
     * <code>performance_schema.prepared_statements_instances.SUM_ERRORS</code>.
     */
    public ULong getSumErrors() {
        return (ULong) get(18);
    }

    /**
     * Setter for
     * <code>performance_schema.prepared_statements_instances.SUM_WARNINGS</code>.
     */
    public PreparedStatementsInstancesRecord setSumWarnings(ULong value) {
        set(19, value);
        return this;
    }

    /**
     * Getter for
     * <code>performance_schema.prepared_statements_instances.SUM_WARNINGS</code>.
     */
    public ULong getSumWarnings() {
        return (ULong) get(19);
    }

    /**
     * Setter for
     * <code>performance_schema.prepared_statements_instances.SUM_ROWS_AFFECTED</code>.
     */
    public PreparedStatementsInstancesRecord setSumRowsAffected(ULong value) {
        set(20, value);
        return this;
    }

    /**
     * Getter for
     * <code>performance_schema.prepared_statements_instances.SUM_ROWS_AFFECTED</code>.
     */
    public ULong getSumRowsAffected() {
        return (ULong) get(20);
    }

    /**
     * Setter for
     * <code>performance_schema.prepared_statements_instances.SUM_ROWS_SENT</code>.
     */
    public PreparedStatementsInstancesRecord setSumRowsSent(ULong value) {
        set(21, value);
        return this;
    }

    /**
     * Getter for
     * <code>performance_schema.prepared_statements_instances.SUM_ROWS_SENT</code>.
     */
    public ULong getSumRowsSent() {
        return (ULong) get(21);
    }

    /**
     * Setter for
     * <code>performance_schema.prepared_statements_instances.SUM_ROWS_EXAMINED</code>.
     */
    public PreparedStatementsInstancesRecord setSumRowsExamined(ULong value) {
        set(22, value);
        return this;
    }

    /**
     * Getter for
     * <code>performance_schema.prepared_statements_instances.SUM_ROWS_EXAMINED</code>.
     */
    public ULong getSumRowsExamined() {
        return (ULong) get(22);
    }

    /**
     * Setter for
     * <code>performance_schema.prepared_statements_instances.SUM_CREATED_TMP_DISK_TABLES</code>.
     */
    public PreparedStatementsInstancesRecord setSumCreatedTmpDiskTables(ULong value) {
        set(23, value);
        return this;
    }

    /**
     * Getter for
     * <code>performance_schema.prepared_statements_instances.SUM_CREATED_TMP_DISK_TABLES</code>.
     */
    public ULong getSumCreatedTmpDiskTables() {
        return (ULong) get(23);
    }

    /**
     * Setter for
     * <code>performance_schema.prepared_statements_instances.SUM_CREATED_TMP_TABLES</code>.
     */
    public PreparedStatementsInstancesRecord setSumCreatedTmpTables(ULong value) {
        set(24, value);
        return this;
    }

    /**
     * Getter for
     * <code>performance_schema.prepared_statements_instances.SUM_CREATED_TMP_TABLES</code>.
     */
    public ULong getSumCreatedTmpTables() {
        return (ULong) get(24);
    }

    /**
     * Setter for
     * <code>performance_schema.prepared_statements_instances.SUM_SELECT_FULL_JOIN</code>.
     */
    public PreparedStatementsInstancesRecord setSumSelectFullJoin(ULong value) {
        set(25, value);
        return this;
    }

    /**
     * Getter for
     * <code>performance_schema.prepared_statements_instances.SUM_SELECT_FULL_JOIN</code>.
     */
    public ULong getSumSelectFullJoin() {
        return (ULong) get(25);
    }

    /**
     * Setter for
     * <code>performance_schema.prepared_statements_instances.SUM_SELECT_FULL_RANGE_JOIN</code>.
     */
    public PreparedStatementsInstancesRecord setSumSelectFullRangeJoin(ULong value) {
        set(26, value);
        return this;
    }

    /**
     * Getter for
     * <code>performance_schema.prepared_statements_instances.SUM_SELECT_FULL_RANGE_JOIN</code>.
     */
    public ULong getSumSelectFullRangeJoin() {
        return (ULong) get(26);
    }

    /**
     * Setter for
     * <code>performance_schema.prepared_statements_instances.SUM_SELECT_RANGE</code>.
     */
    public PreparedStatementsInstancesRecord setSumSelectRange(ULong value) {
        set(27, value);
        return this;
    }

    /**
     * Getter for
     * <code>performance_schema.prepared_statements_instances.SUM_SELECT_RANGE</code>.
     */
    public ULong getSumSelectRange() {
        return (ULong) get(27);
    }

    /**
     * Setter for
     * <code>performance_schema.prepared_statements_instances.SUM_SELECT_RANGE_CHECK</code>.
     */
    public PreparedStatementsInstancesRecord setSumSelectRangeCheck(ULong value) {
        set(28, value);
        return this;
    }

    /**
     * Getter for
     * <code>performance_schema.prepared_statements_instances.SUM_SELECT_RANGE_CHECK</code>.
     */
    public ULong getSumSelectRangeCheck() {
        return (ULong) get(28);
    }

    /**
     * Setter for
     * <code>performance_schema.prepared_statements_instances.SUM_SELECT_SCAN</code>.
     */
    public PreparedStatementsInstancesRecord setSumSelectScan(ULong value) {
        set(29, value);
        return this;
    }

    /**
     * Getter for
     * <code>performance_schema.prepared_statements_instances.SUM_SELECT_SCAN</code>.
     */
    public ULong getSumSelectScan() {
        return (ULong) get(29);
    }

    /**
     * Setter for
     * <code>performance_schema.prepared_statements_instances.SUM_SORT_MERGE_PASSES</code>.
     */
    public PreparedStatementsInstancesRecord setSumSortMergePasses(ULong value) {
        set(30, value);
        return this;
    }

    /**
     * Getter for
     * <code>performance_schema.prepared_statements_instances.SUM_SORT_MERGE_PASSES</code>.
     */
    public ULong getSumSortMergePasses() {
        return (ULong) get(30);
    }

    /**
     * Setter for
     * <code>performance_schema.prepared_statements_instances.SUM_SORT_RANGE</code>.
     */
    public PreparedStatementsInstancesRecord setSumSortRange(ULong value) {
        set(31, value);
        return this;
    }

    /**
     * Getter for
     * <code>performance_schema.prepared_statements_instances.SUM_SORT_RANGE</code>.
     */
    public ULong getSumSortRange() {
        return (ULong) get(31);
    }

    /**
     * Setter for
     * <code>performance_schema.prepared_statements_instances.SUM_SORT_ROWS</code>.
     */
    public PreparedStatementsInstancesRecord setSumSortRows(ULong value) {
        set(32, value);
        return this;
    }

    /**
     * Getter for
     * <code>performance_schema.prepared_statements_instances.SUM_SORT_ROWS</code>.
     */
    public ULong getSumSortRows() {
        return (ULong) get(32);
    }

    /**
     * Setter for
     * <code>performance_schema.prepared_statements_instances.SUM_SORT_SCAN</code>.
     */
    public PreparedStatementsInstancesRecord setSumSortScan(ULong value) {
        set(33, value);
        return this;
    }

    /**
     * Getter for
     * <code>performance_schema.prepared_statements_instances.SUM_SORT_SCAN</code>.
     */
    public ULong getSumSortScan() {
        return (ULong) get(33);
    }

    /**
     * Setter for
     * <code>performance_schema.prepared_statements_instances.SUM_NO_INDEX_USED</code>.
     */
    public PreparedStatementsInstancesRecord setSumNoIndexUsed(ULong value) {
        set(34, value);
        return this;
    }

    /**
     * Getter for
     * <code>performance_schema.prepared_statements_instances.SUM_NO_INDEX_USED</code>.
     */
    public ULong getSumNoIndexUsed() {
        return (ULong) get(34);
    }

    /**
     * Setter for
     * <code>performance_schema.prepared_statements_instances.SUM_NO_GOOD_INDEX_USED</code>.
     */
    public PreparedStatementsInstancesRecord setSumNoGoodIndexUsed(ULong value) {
        set(35, value);
        return this;
    }

    /**
     * Getter for
     * <code>performance_schema.prepared_statements_instances.SUM_NO_GOOD_INDEX_USED</code>.
     */
    public ULong getSumNoGoodIndexUsed() {
        return (ULong) get(35);
    }

    /**
     * Setter for
     * <code>performance_schema.prepared_statements_instances.SUM_CPU_TIME</code>.
     */
    public PreparedStatementsInstancesRecord setSumCpuTime(ULong value) {
        set(36, value);
        return this;
    }

    /**
     * Getter for
     * <code>performance_schema.prepared_statements_instances.SUM_CPU_TIME</code>.
     */
    public ULong getSumCpuTime() {
        return (ULong) get(36);
    }

    /**
     * Setter for
     * <code>performance_schema.prepared_statements_instances.MAX_CONTROLLED_MEMORY</code>.
     */
    public PreparedStatementsInstancesRecord setMaxControlledMemory(ULong value) {
        set(37, value);
        return this;
    }

    /**
     * Getter for
     * <code>performance_schema.prepared_statements_instances.MAX_CONTROLLED_MEMORY</code>.
     */
    public ULong getMaxControlledMemory() {
        return (ULong) get(37);
    }

    /**
     * Setter for
     * <code>performance_schema.prepared_statements_instances.MAX_TOTAL_MEMORY</code>.
     */
    public PreparedStatementsInstancesRecord setMaxTotalMemory(ULong value) {
        set(38, value);
        return this;
    }

    /**
     * Getter for
     * <code>performance_schema.prepared_statements_instances.MAX_TOTAL_MEMORY</code>.
     */
    public ULong getMaxTotalMemory() {
        return (ULong) get(38);
    }

    /**
     * Setter for
     * <code>performance_schema.prepared_statements_instances.COUNT_SECONDARY</code>.
     */
    public PreparedStatementsInstancesRecord setCountSecondary(ULong value) {
        set(39, value);
        return this;
    }

    /**
     * Getter for
     * <code>performance_schema.prepared_statements_instances.COUNT_SECONDARY</code>.
     */
    public ULong getCountSecondary() {
        return (ULong) get(39);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<ULong> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PreparedStatementsInstancesRecord
     */
    public PreparedStatementsInstancesRecord() {
        super(PreparedStatementsInstances.PREPARED_STATEMENTS_INSTANCES);
    }

    /**
     * Create a detached, initialised PreparedStatementsInstancesRecord
     */
    public PreparedStatementsInstancesRecord(ULong objectInstanceBegin, ULong statementId, String statementName, String sqlText, ULong ownerThreadId, ULong ownerEventId, PreparedStatementsInstancesOwnerObjectType ownerObjectType, String ownerObjectSchema, String ownerObjectName, PreparedStatementsInstancesExecutionEngine executionEngine, ULong timerPrepare, ULong countReprepare, ULong countExecute, ULong sumTimerExecute, ULong minTimerExecute, ULong avgTimerExecute, ULong maxTimerExecute, ULong sumLockTime, ULong sumErrors, ULong sumWarnings, ULong sumRowsAffected, ULong sumRowsSent, ULong sumRowsExamined, ULong sumCreatedTmpDiskTables, ULong sumCreatedTmpTables, ULong sumSelectFullJoin, ULong sumSelectFullRangeJoin, ULong sumSelectRange, ULong sumSelectRangeCheck, ULong sumSelectScan, ULong sumSortMergePasses, ULong sumSortRange, ULong sumSortRows, ULong sumSortScan, ULong sumNoIndexUsed, ULong sumNoGoodIndexUsed, ULong sumCpuTime, ULong maxControlledMemory, ULong maxTotalMemory, ULong countSecondary) {
        super(PreparedStatementsInstances.PREPARED_STATEMENTS_INSTANCES);

        setObjectInstanceBegin(objectInstanceBegin);
        setStatementId(statementId);
        setStatementName(statementName);
        setSqlText(sqlText);
        setOwnerThreadId(ownerThreadId);
        setOwnerEventId(ownerEventId);
        setOwnerObjectType(ownerObjectType);
        setOwnerObjectSchema(ownerObjectSchema);
        setOwnerObjectName(ownerObjectName);
        setExecutionEngine(executionEngine);
        setTimerPrepare(timerPrepare);
        setCountReprepare(countReprepare);
        setCountExecute(countExecute);
        setSumTimerExecute(sumTimerExecute);
        setMinTimerExecute(minTimerExecute);
        setAvgTimerExecute(avgTimerExecute);
        setMaxTimerExecute(maxTimerExecute);
        setSumLockTime(sumLockTime);
        setSumErrors(sumErrors);
        setSumWarnings(sumWarnings);
        setSumRowsAffected(sumRowsAffected);
        setSumRowsSent(sumRowsSent);
        setSumRowsExamined(sumRowsExamined);
        setSumCreatedTmpDiskTables(sumCreatedTmpDiskTables);
        setSumCreatedTmpTables(sumCreatedTmpTables);
        setSumSelectFullJoin(sumSelectFullJoin);
        setSumSelectFullRangeJoin(sumSelectFullRangeJoin);
        setSumSelectRange(sumSelectRange);
        setSumSelectRangeCheck(sumSelectRangeCheck);
        setSumSelectScan(sumSelectScan);
        setSumSortMergePasses(sumSortMergePasses);
        setSumSortRange(sumSortRange);
        setSumSortRows(sumSortRows);
        setSumSortScan(sumSortScan);
        setSumNoIndexUsed(sumNoIndexUsed);
        setSumNoGoodIndexUsed(sumNoGoodIndexUsed);
        setSumCpuTime(sumCpuTime);
        setMaxControlledMemory(maxControlledMemory);
        setMaxTotalMemory(maxTotalMemory);
        setCountSecondary(countSecondary);
    }

    /**
     * Create a detached, initialised PreparedStatementsInstancesRecord
     */
    public PreparedStatementsInstancesRecord(com.neurasim.jooq.performance_schema.tables.pojos.PreparedStatementsInstances value) {
        super(PreparedStatementsInstances.PREPARED_STATEMENTS_INSTANCES);

        if (value != null) {
            setObjectInstanceBegin(value.getObjectInstanceBegin());
            setStatementId(value.getStatementId());
            setStatementName(value.getStatementName());
            setSqlText(value.getSqlText());
            setOwnerThreadId(value.getOwnerThreadId());
            setOwnerEventId(value.getOwnerEventId());
            setOwnerObjectType(value.getOwnerObjectType());
            setOwnerObjectSchema(value.getOwnerObjectSchema());
            setOwnerObjectName(value.getOwnerObjectName());
            setExecutionEngine(value.getExecutionEngine());
            setTimerPrepare(value.getTimerPrepare());
            setCountReprepare(value.getCountReprepare());
            setCountExecute(value.getCountExecute());
            setSumTimerExecute(value.getSumTimerExecute());
            setMinTimerExecute(value.getMinTimerExecute());
            setAvgTimerExecute(value.getAvgTimerExecute());
            setMaxTimerExecute(value.getMaxTimerExecute());
            setSumLockTime(value.getSumLockTime());
            setSumErrors(value.getSumErrors());
            setSumWarnings(value.getSumWarnings());
            setSumRowsAffected(value.getSumRowsAffected());
            setSumRowsSent(value.getSumRowsSent());
            setSumRowsExamined(value.getSumRowsExamined());
            setSumCreatedTmpDiskTables(value.getSumCreatedTmpDiskTables());
            setSumCreatedTmpTables(value.getSumCreatedTmpTables());
            setSumSelectFullJoin(value.getSumSelectFullJoin());
            setSumSelectFullRangeJoin(value.getSumSelectFullRangeJoin());
            setSumSelectRange(value.getSumSelectRange());
            setSumSelectRangeCheck(value.getSumSelectRangeCheck());
            setSumSelectScan(value.getSumSelectScan());
            setSumSortMergePasses(value.getSumSortMergePasses());
            setSumSortRange(value.getSumSortRange());
            setSumSortRows(value.getSumSortRows());
            setSumSortScan(value.getSumSortScan());
            setSumNoIndexUsed(value.getSumNoIndexUsed());
            setSumNoGoodIndexUsed(value.getSumNoGoodIndexUsed());
            setSumCpuTime(value.getSumCpuTime());
            setMaxControlledMemory(value.getMaxControlledMemory());
            setMaxTotalMemory(value.getMaxTotalMemory());
            setCountSecondary(value.getCountSecondary());
        }
    }
}
