/*
 * This file is generated by jOOQ.
 */
package com.neurasim.jooq.performance_schema.tables.pojos;


import com.neurasim.jooq.performance_schema.enums.EventsTransactionsHistoryAccessMode;
import com.neurasim.jooq.performance_schema.enums.EventsTransactionsHistoryAutocommit;
import com.neurasim.jooq.performance_schema.enums.EventsTransactionsHistoryNestingEventType;
import com.neurasim.jooq.performance_schema.enums.EventsTransactionsHistoryState;

import java.io.Serializable;

import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EventsTransactionsHistory implements Serializable {

    private static final long serialVersionUID = 1L;

    private final ULong threadId;
    private final ULong eventId;
    private final ULong endEventId;
    private final String eventName;
    private final EventsTransactionsHistoryState state;
    private final ULong trxId;
    private final String gtid;
    private final Integer xidFormatId;
    private final String xidGtrid;
    private final String xidBqual;
    private final String xaState;
    private final String source;
    private final ULong timerStart;
    private final ULong timerEnd;
    private final ULong timerWait;
    private final EventsTransactionsHistoryAccessMode accessMode;
    private final String isolationLevel;
    private final EventsTransactionsHistoryAutocommit autocommit;
    private final ULong numberOfSavepoints;
    private final ULong numberOfRollbackToSavepoint;
    private final ULong numberOfReleaseSavepoint;
    private final ULong objectInstanceBegin;
    private final ULong nestingEventId;
    private final EventsTransactionsHistoryNestingEventType nestingEventType;

    public EventsTransactionsHistory(EventsTransactionsHistory value) {
        this.threadId = value.threadId;
        this.eventId = value.eventId;
        this.endEventId = value.endEventId;
        this.eventName = value.eventName;
        this.state = value.state;
        this.trxId = value.trxId;
        this.gtid = value.gtid;
        this.xidFormatId = value.xidFormatId;
        this.xidGtrid = value.xidGtrid;
        this.xidBqual = value.xidBqual;
        this.xaState = value.xaState;
        this.source = value.source;
        this.timerStart = value.timerStart;
        this.timerEnd = value.timerEnd;
        this.timerWait = value.timerWait;
        this.accessMode = value.accessMode;
        this.isolationLevel = value.isolationLevel;
        this.autocommit = value.autocommit;
        this.numberOfSavepoints = value.numberOfSavepoints;
        this.numberOfRollbackToSavepoint = value.numberOfRollbackToSavepoint;
        this.numberOfReleaseSavepoint = value.numberOfReleaseSavepoint;
        this.objectInstanceBegin = value.objectInstanceBegin;
        this.nestingEventId = value.nestingEventId;
        this.nestingEventType = value.nestingEventType;
    }

    public EventsTransactionsHistory(
        ULong threadId,
        ULong eventId,
        ULong endEventId,
        String eventName,
        EventsTransactionsHistoryState state,
        ULong trxId,
        String gtid,
        Integer xidFormatId,
        String xidGtrid,
        String xidBqual,
        String xaState,
        String source,
        ULong timerStart,
        ULong timerEnd,
        ULong timerWait,
        EventsTransactionsHistoryAccessMode accessMode,
        String isolationLevel,
        EventsTransactionsHistoryAutocommit autocommit,
        ULong numberOfSavepoints,
        ULong numberOfRollbackToSavepoint,
        ULong numberOfReleaseSavepoint,
        ULong objectInstanceBegin,
        ULong nestingEventId,
        EventsTransactionsHistoryNestingEventType nestingEventType
    ) {
        this.threadId = threadId;
        this.eventId = eventId;
        this.endEventId = endEventId;
        this.eventName = eventName;
        this.state = state;
        this.trxId = trxId;
        this.gtid = gtid;
        this.xidFormatId = xidFormatId;
        this.xidGtrid = xidGtrid;
        this.xidBqual = xidBqual;
        this.xaState = xaState;
        this.source = source;
        this.timerStart = timerStart;
        this.timerEnd = timerEnd;
        this.timerWait = timerWait;
        this.accessMode = accessMode;
        this.isolationLevel = isolationLevel;
        this.autocommit = autocommit;
        this.numberOfSavepoints = numberOfSavepoints;
        this.numberOfRollbackToSavepoint = numberOfRollbackToSavepoint;
        this.numberOfReleaseSavepoint = numberOfReleaseSavepoint;
        this.objectInstanceBegin = objectInstanceBegin;
        this.nestingEventId = nestingEventId;
        this.nestingEventType = nestingEventType;
    }

    /**
     * Getter for
     * <code>performance_schema.events_transactions_history.THREAD_ID</code>.
     */
    public ULong getThreadId() {
        return this.threadId;
    }

    /**
     * Getter for
     * <code>performance_schema.events_transactions_history.EVENT_ID</code>.
     */
    public ULong getEventId() {
        return this.eventId;
    }

    /**
     * Getter for
     * <code>performance_schema.events_transactions_history.END_EVENT_ID</code>.
     */
    public ULong getEndEventId() {
        return this.endEventId;
    }

    /**
     * Getter for
     * <code>performance_schema.events_transactions_history.EVENT_NAME</code>.
     */
    public String getEventName() {
        return this.eventName;
    }

    /**
     * Getter for
     * <code>performance_schema.events_transactions_history.STATE</code>.
     */
    public EventsTransactionsHistoryState getState() {
        return this.state;
    }

    /**
     * Getter for
     * <code>performance_schema.events_transactions_history.TRX_ID</code>.
     */
    public ULong getTrxId() {
        return this.trxId;
    }

    /**
     * Getter for
     * <code>performance_schema.events_transactions_history.GTID</code>.
     */
    public String getGtid() {
        return this.gtid;
    }

    /**
     * Getter for
     * <code>performance_schema.events_transactions_history.XID_FORMAT_ID</code>.
     */
    public Integer getXidFormatId() {
        return this.xidFormatId;
    }

    /**
     * Getter for
     * <code>performance_schema.events_transactions_history.XID_GTRID</code>.
     */
    public String getXidGtrid() {
        return this.xidGtrid;
    }

    /**
     * Getter for
     * <code>performance_schema.events_transactions_history.XID_BQUAL</code>.
     */
    public String getXidBqual() {
        return this.xidBqual;
    }

    /**
     * Getter for
     * <code>performance_schema.events_transactions_history.XA_STATE</code>.
     */
    public String getXaState() {
        return this.xaState;
    }

    /**
     * Getter for
     * <code>performance_schema.events_transactions_history.SOURCE</code>.
     */
    public String getSource() {
        return this.source;
    }

    /**
     * Getter for
     * <code>performance_schema.events_transactions_history.TIMER_START</code>.
     */
    public ULong getTimerStart() {
        return this.timerStart;
    }

    /**
     * Getter for
     * <code>performance_schema.events_transactions_history.TIMER_END</code>.
     */
    public ULong getTimerEnd() {
        return this.timerEnd;
    }

    /**
     * Getter for
     * <code>performance_schema.events_transactions_history.TIMER_WAIT</code>.
     */
    public ULong getTimerWait() {
        return this.timerWait;
    }

    /**
     * Getter for
     * <code>performance_schema.events_transactions_history.ACCESS_MODE</code>.
     */
    public EventsTransactionsHistoryAccessMode getAccessMode() {
        return this.accessMode;
    }

    /**
     * Getter for
     * <code>performance_schema.events_transactions_history.ISOLATION_LEVEL</code>.
     */
    public String getIsolationLevel() {
        return this.isolationLevel;
    }

    /**
     * Getter for
     * <code>performance_schema.events_transactions_history.AUTOCOMMIT</code>.
     */
    public EventsTransactionsHistoryAutocommit getAutocommit() {
        return this.autocommit;
    }

    /**
     * Getter for
     * <code>performance_schema.events_transactions_history.NUMBER_OF_SAVEPOINTS</code>.
     */
    public ULong getNumberOfSavepoints() {
        return this.numberOfSavepoints;
    }

    /**
     * Getter for
     * <code>performance_schema.events_transactions_history.NUMBER_OF_ROLLBACK_TO_SAVEPOINT</code>.
     */
    public ULong getNumberOfRollbackToSavepoint() {
        return this.numberOfRollbackToSavepoint;
    }

    /**
     * Getter for
     * <code>performance_schema.events_transactions_history.NUMBER_OF_RELEASE_SAVEPOINT</code>.
     */
    public ULong getNumberOfReleaseSavepoint() {
        return this.numberOfReleaseSavepoint;
    }

    /**
     * Getter for
     * <code>performance_schema.events_transactions_history.OBJECT_INSTANCE_BEGIN</code>.
     */
    public ULong getObjectInstanceBegin() {
        return this.objectInstanceBegin;
    }

    /**
     * Getter for
     * <code>performance_schema.events_transactions_history.NESTING_EVENT_ID</code>.
     */
    public ULong getNestingEventId() {
        return this.nestingEventId;
    }

    /**
     * Getter for
     * <code>performance_schema.events_transactions_history.NESTING_EVENT_TYPE</code>.
     */
    public EventsTransactionsHistoryNestingEventType getNestingEventType() {
        return this.nestingEventType;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final EventsTransactionsHistory other = (EventsTransactionsHistory) obj;
        if (this.threadId == null) {
            if (other.threadId != null)
                return false;
        }
        else if (!this.threadId.equals(other.threadId))
            return false;
        if (this.eventId == null) {
            if (other.eventId != null)
                return false;
        }
        else if (!this.eventId.equals(other.eventId))
            return false;
        if (this.endEventId == null) {
            if (other.endEventId != null)
                return false;
        }
        else if (!this.endEventId.equals(other.endEventId))
            return false;
        if (this.eventName == null) {
            if (other.eventName != null)
                return false;
        }
        else if (!this.eventName.equals(other.eventName))
            return false;
        if (this.state == null) {
            if (other.state != null)
                return false;
        }
        else if (!this.state.equals(other.state))
            return false;
        if (this.trxId == null) {
            if (other.trxId != null)
                return false;
        }
        else if (!this.trxId.equals(other.trxId))
            return false;
        if (this.gtid == null) {
            if (other.gtid != null)
                return false;
        }
        else if (!this.gtid.equals(other.gtid))
            return false;
        if (this.xidFormatId == null) {
            if (other.xidFormatId != null)
                return false;
        }
        else if (!this.xidFormatId.equals(other.xidFormatId))
            return false;
        if (this.xidGtrid == null) {
            if (other.xidGtrid != null)
                return false;
        }
        else if (!this.xidGtrid.equals(other.xidGtrid))
            return false;
        if (this.xidBqual == null) {
            if (other.xidBqual != null)
                return false;
        }
        else if (!this.xidBqual.equals(other.xidBqual))
            return false;
        if (this.xaState == null) {
            if (other.xaState != null)
                return false;
        }
        else if (!this.xaState.equals(other.xaState))
            return false;
        if (this.source == null) {
            if (other.source != null)
                return false;
        }
        else if (!this.source.equals(other.source))
            return false;
        if (this.timerStart == null) {
            if (other.timerStart != null)
                return false;
        }
        else if (!this.timerStart.equals(other.timerStart))
            return false;
        if (this.timerEnd == null) {
            if (other.timerEnd != null)
                return false;
        }
        else if (!this.timerEnd.equals(other.timerEnd))
            return false;
        if (this.timerWait == null) {
            if (other.timerWait != null)
                return false;
        }
        else if (!this.timerWait.equals(other.timerWait))
            return false;
        if (this.accessMode == null) {
            if (other.accessMode != null)
                return false;
        }
        else if (!this.accessMode.equals(other.accessMode))
            return false;
        if (this.isolationLevel == null) {
            if (other.isolationLevel != null)
                return false;
        }
        else if (!this.isolationLevel.equals(other.isolationLevel))
            return false;
        if (this.autocommit == null) {
            if (other.autocommit != null)
                return false;
        }
        else if (!this.autocommit.equals(other.autocommit))
            return false;
        if (this.numberOfSavepoints == null) {
            if (other.numberOfSavepoints != null)
                return false;
        }
        else if (!this.numberOfSavepoints.equals(other.numberOfSavepoints))
            return false;
        if (this.numberOfRollbackToSavepoint == null) {
            if (other.numberOfRollbackToSavepoint != null)
                return false;
        }
        else if (!this.numberOfRollbackToSavepoint.equals(other.numberOfRollbackToSavepoint))
            return false;
        if (this.numberOfReleaseSavepoint == null) {
            if (other.numberOfReleaseSavepoint != null)
                return false;
        }
        else if (!this.numberOfReleaseSavepoint.equals(other.numberOfReleaseSavepoint))
            return false;
        if (this.objectInstanceBegin == null) {
            if (other.objectInstanceBegin != null)
                return false;
        }
        else if (!this.objectInstanceBegin.equals(other.objectInstanceBegin))
            return false;
        if (this.nestingEventId == null) {
            if (other.nestingEventId != null)
                return false;
        }
        else if (!this.nestingEventId.equals(other.nestingEventId))
            return false;
        if (this.nestingEventType == null) {
            if (other.nestingEventType != null)
                return false;
        }
        else if (!this.nestingEventType.equals(other.nestingEventType))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.threadId == null) ? 0 : this.threadId.hashCode());
        result = prime * result + ((this.eventId == null) ? 0 : this.eventId.hashCode());
        result = prime * result + ((this.endEventId == null) ? 0 : this.endEventId.hashCode());
        result = prime * result + ((this.eventName == null) ? 0 : this.eventName.hashCode());
        result = prime * result + ((this.state == null) ? 0 : this.state.hashCode());
        result = prime * result + ((this.trxId == null) ? 0 : this.trxId.hashCode());
        result = prime * result + ((this.gtid == null) ? 0 : this.gtid.hashCode());
        result = prime * result + ((this.xidFormatId == null) ? 0 : this.xidFormatId.hashCode());
        result = prime * result + ((this.xidGtrid == null) ? 0 : this.xidGtrid.hashCode());
        result = prime * result + ((this.xidBqual == null) ? 0 : this.xidBqual.hashCode());
        result = prime * result + ((this.xaState == null) ? 0 : this.xaState.hashCode());
        result = prime * result + ((this.source == null) ? 0 : this.source.hashCode());
        result = prime * result + ((this.timerStart == null) ? 0 : this.timerStart.hashCode());
        result = prime * result + ((this.timerEnd == null) ? 0 : this.timerEnd.hashCode());
        result = prime * result + ((this.timerWait == null) ? 0 : this.timerWait.hashCode());
        result = prime * result + ((this.accessMode == null) ? 0 : this.accessMode.hashCode());
        result = prime * result + ((this.isolationLevel == null) ? 0 : this.isolationLevel.hashCode());
        result = prime * result + ((this.autocommit == null) ? 0 : this.autocommit.hashCode());
        result = prime * result + ((this.numberOfSavepoints == null) ? 0 : this.numberOfSavepoints.hashCode());
        result = prime * result + ((this.numberOfRollbackToSavepoint == null) ? 0 : this.numberOfRollbackToSavepoint.hashCode());
        result = prime * result + ((this.numberOfReleaseSavepoint == null) ? 0 : this.numberOfReleaseSavepoint.hashCode());
        result = prime * result + ((this.objectInstanceBegin == null) ? 0 : this.objectInstanceBegin.hashCode());
        result = prime * result + ((this.nestingEventId == null) ? 0 : this.nestingEventId.hashCode());
        result = prime * result + ((this.nestingEventType == null) ? 0 : this.nestingEventType.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("EventsTransactionsHistory (");

        sb.append(threadId);
        sb.append(", ").append(eventId);
        sb.append(", ").append(endEventId);
        sb.append(", ").append(eventName);
        sb.append(", ").append(state);
        sb.append(", ").append(trxId);
        sb.append(", ").append(gtid);
        sb.append(", ").append(xidFormatId);
        sb.append(", ").append(xidGtrid);
        sb.append(", ").append(xidBqual);
        sb.append(", ").append(xaState);
        sb.append(", ").append(source);
        sb.append(", ").append(timerStart);
        sb.append(", ").append(timerEnd);
        sb.append(", ").append(timerWait);
        sb.append(", ").append(accessMode);
        sb.append(", ").append(isolationLevel);
        sb.append(", ").append(autocommit);
        sb.append(", ").append(numberOfSavepoints);
        sb.append(", ").append(numberOfRollbackToSavepoint);
        sb.append(", ").append(numberOfReleaseSavepoint);
        sb.append(", ").append(objectInstanceBegin);
        sb.append(", ").append(nestingEventId);
        sb.append(", ").append(nestingEventType);

        sb.append(")");
        return sb.toString();
    }
}
