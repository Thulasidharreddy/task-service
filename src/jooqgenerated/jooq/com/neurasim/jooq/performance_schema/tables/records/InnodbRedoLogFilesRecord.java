/*
 * This file is generated by jOOQ.
 */
package com.neurasim.jooq.performance_schema.tables.records;


import com.neurasim.jooq.performance_schema.tables.InnodbRedoLogFiles;

import org.jooq.Field;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class InnodbRedoLogFilesRecord extends TableRecordImpl<InnodbRedoLogFilesRecord> implements Record7<Long, String, Long, Long, Long, Byte, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>performance_schema.innodb_redo_log_files.FILE_ID</code>.
     * Id of the file.
     */
    public InnodbRedoLogFilesRecord setFileId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>performance_schema.innodb_redo_log_files.FILE_ID</code>.
     * Id of the file.
     */
    public Long getFileId() {
        return (Long) get(0);
    }

    /**
     * Setter for
     * <code>performance_schema.innodb_redo_log_files.FILE_NAME</code>. Path to
     * the file.
     */
    public InnodbRedoLogFilesRecord setFileName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for
     * <code>performance_schema.innodb_redo_log_files.FILE_NAME</code>. Path to
     * the file.
     */
    public String getFileName() {
        return (String) get(1);
    }

    /**
     * Setter for
     * <code>performance_schema.innodb_redo_log_files.START_LSN</code>. LSN of
     * the first block in the file.
     */
    public InnodbRedoLogFilesRecord setStartLsn(Long value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for
     * <code>performance_schema.innodb_redo_log_files.START_LSN</code>. LSN of
     * the first block in the file.
     */
    public Long getStartLsn() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>performance_schema.innodb_redo_log_files.END_LSN</code>.
     * LSN after the last block in the file.
     */
    public InnodbRedoLogFilesRecord setEndLsn(Long value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>performance_schema.innodb_redo_log_files.END_LSN</code>.
     * LSN after the last block in the file.
     */
    public Long getEndLsn() {
        return (Long) get(3);
    }

    /**
     * Setter for
     * <code>performance_schema.innodb_redo_log_files.SIZE_IN_BYTES</code>. Size
     * of the file (in bytes).
     */
    public InnodbRedoLogFilesRecord setSizeInBytes(Long value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for
     * <code>performance_schema.innodb_redo_log_files.SIZE_IN_BYTES</code>. Size
     * of the file (in bytes).
     */
    public Long getSizeInBytes() {
        return (Long) get(4);
    }

    /**
     * Setter for <code>performance_schema.innodb_redo_log_files.IS_FULL</code>.
     * 1 iff file has no free space inside.
     */
    public InnodbRedoLogFilesRecord setIsFull(Byte value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>performance_schema.innodb_redo_log_files.IS_FULL</code>.
     * 1 iff file has no free space inside.
     */
    public Byte getIsFull() {
        return (Byte) get(5);
    }

    /**
     * Setter for
     * <code>performance_schema.innodb_redo_log_files.CONSUMER_LEVEL</code>. All
     * redo log consumers registered on smaller levels than this value, have
     * already consumed this file.
     */
    public InnodbRedoLogFilesRecord setConsumerLevel(Integer value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for
     * <code>performance_schema.innodb_redo_log_files.CONSUMER_LEVEL</code>. All
     * redo log consumers registered on smaller levels than this value, have
     * already consumed this file.
     */
    public Integer getConsumerLevel() {
        return (Integer) get(6);
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<Long, String, Long, Long, Long, Byte, Integer> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<Long, String, Long, Long, Long, Byte, Integer> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return InnodbRedoLogFiles.INNODB_REDO_LOG_FILES.FILE_ID;
    }

    @Override
    public Field<String> field2() {
        return InnodbRedoLogFiles.INNODB_REDO_LOG_FILES.FILE_NAME;
    }

    @Override
    public Field<Long> field3() {
        return InnodbRedoLogFiles.INNODB_REDO_LOG_FILES.START_LSN;
    }

    @Override
    public Field<Long> field4() {
        return InnodbRedoLogFiles.INNODB_REDO_LOG_FILES.END_LSN;
    }

    @Override
    public Field<Long> field5() {
        return InnodbRedoLogFiles.INNODB_REDO_LOG_FILES.SIZE_IN_BYTES;
    }

    @Override
    public Field<Byte> field6() {
        return InnodbRedoLogFiles.INNODB_REDO_LOG_FILES.IS_FULL;
    }

    @Override
    public Field<Integer> field7() {
        return InnodbRedoLogFiles.INNODB_REDO_LOG_FILES.CONSUMER_LEVEL;
    }

    @Override
    public Long component1() {
        return getFileId();
    }

    @Override
    public String component2() {
        return getFileName();
    }

    @Override
    public Long component3() {
        return getStartLsn();
    }

    @Override
    public Long component4() {
        return getEndLsn();
    }

    @Override
    public Long component5() {
        return getSizeInBytes();
    }

    @Override
    public Byte component6() {
        return getIsFull();
    }

    @Override
    public Integer component7() {
        return getConsumerLevel();
    }

    @Override
    public Long value1() {
        return getFileId();
    }

    @Override
    public String value2() {
        return getFileName();
    }

    @Override
    public Long value3() {
        return getStartLsn();
    }

    @Override
    public Long value4() {
        return getEndLsn();
    }

    @Override
    public Long value5() {
        return getSizeInBytes();
    }

    @Override
    public Byte value6() {
        return getIsFull();
    }

    @Override
    public Integer value7() {
        return getConsumerLevel();
    }

    @Override
    public InnodbRedoLogFilesRecord value1(Long value) {
        setFileId(value);
        return this;
    }

    @Override
    public InnodbRedoLogFilesRecord value2(String value) {
        setFileName(value);
        return this;
    }

    @Override
    public InnodbRedoLogFilesRecord value3(Long value) {
        setStartLsn(value);
        return this;
    }

    @Override
    public InnodbRedoLogFilesRecord value4(Long value) {
        setEndLsn(value);
        return this;
    }

    @Override
    public InnodbRedoLogFilesRecord value5(Long value) {
        setSizeInBytes(value);
        return this;
    }

    @Override
    public InnodbRedoLogFilesRecord value6(Byte value) {
        setIsFull(value);
        return this;
    }

    @Override
    public InnodbRedoLogFilesRecord value7(Integer value) {
        setConsumerLevel(value);
        return this;
    }

    @Override
    public InnodbRedoLogFilesRecord values(Long value1, String value2, Long value3, Long value4, Long value5, Byte value6, Integer value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached InnodbRedoLogFilesRecord
     */
    public InnodbRedoLogFilesRecord() {
        super(InnodbRedoLogFiles.INNODB_REDO_LOG_FILES);
    }

    /**
     * Create a detached, initialised InnodbRedoLogFilesRecord
     */
    public InnodbRedoLogFilesRecord(Long fileId, String fileName, Long startLsn, Long endLsn, Long sizeInBytes, Byte isFull, Integer consumerLevel) {
        super(InnodbRedoLogFiles.INNODB_REDO_LOG_FILES);

        setFileId(fileId);
        setFileName(fileName);
        setStartLsn(startLsn);
        setEndLsn(endLsn);
        setSizeInBytes(sizeInBytes);
        setIsFull(isFull);
        setConsumerLevel(consumerLevel);
    }

    /**
     * Create a detached, initialised InnodbRedoLogFilesRecord
     */
    public InnodbRedoLogFilesRecord(com.neurasim.jooq.performance_schema.tables.pojos.InnodbRedoLogFiles value) {
        super(InnodbRedoLogFiles.INNODB_REDO_LOG_FILES);

        if (value != null) {
            setFileId(value.getFileId());
            setFileName(value.getFileName());
            setStartLsn(value.getStartLsn());
            setEndLsn(value.getEndLsn());
            setSizeInBytes(value.getSizeInBytes());
            setIsFull(value.getIsFull());
            setConsumerLevel(value.getConsumerLevel());
        }
    }
}
