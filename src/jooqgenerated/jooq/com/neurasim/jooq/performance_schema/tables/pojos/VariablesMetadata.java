/*
 * This file is generated by jOOQ.
 */
package com.neurasim.jooq.performance_schema.tables.pojos;


import com.neurasim.jooq.performance_schema.enums.VariablesMetadataDataType;
import com.neurasim.jooq.performance_schema.enums.VariablesMetadataVariableScope;

import java.io.Serializable;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class VariablesMetadata implements Serializable {

    private static final long serialVersionUID = 1L;

    private final String variableName;
    private final VariablesMetadataVariableScope variableScope;
    private final VariablesMetadataDataType dataType;
    private final String minValue;
    private final String maxValue;
    private final String documentation;

    public VariablesMetadata(VariablesMetadata value) {
        this.variableName = value.variableName;
        this.variableScope = value.variableScope;
        this.dataType = value.dataType;
        this.minValue = value.minValue;
        this.maxValue = value.maxValue;
        this.documentation = value.documentation;
    }

    public VariablesMetadata(
        String variableName,
        VariablesMetadataVariableScope variableScope,
        VariablesMetadataDataType dataType,
        String minValue,
        String maxValue,
        String documentation
    ) {
        this.variableName = variableName;
        this.variableScope = variableScope;
        this.dataType = dataType;
        this.minValue = minValue;
        this.maxValue = maxValue;
        this.documentation = documentation;
    }

    /**
     * Getter for
     * <code>performance_schema.variables_metadata.VARIABLE_NAME</code>.
     */
    public String getVariableName() {
        return this.variableName;
    }

    /**
     * Getter for
     * <code>performance_schema.variables_metadata.VARIABLE_SCOPE</code>.
     */
    public VariablesMetadataVariableScope getVariableScope() {
        return this.variableScope;
    }

    /**
     * Getter for <code>performance_schema.variables_metadata.DATA_TYPE</code>.
     */
    public VariablesMetadataDataType getDataType() {
        return this.dataType;
    }

    /**
     * Getter for <code>performance_schema.variables_metadata.MIN_VALUE</code>.
     */
    public String getMinValue() {
        return this.minValue;
    }

    /**
     * Getter for <code>performance_schema.variables_metadata.MAX_VALUE</code>.
     */
    public String getMaxValue() {
        return this.maxValue;
    }

    /**
     * Getter for
     * <code>performance_schema.variables_metadata.DOCUMENTATION</code>.
     */
    public String getDocumentation() {
        return this.documentation;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final VariablesMetadata other = (VariablesMetadata) obj;
        if (this.variableName == null) {
            if (other.variableName != null)
                return false;
        }
        else if (!this.variableName.equals(other.variableName))
            return false;
        if (this.variableScope == null) {
            if (other.variableScope != null)
                return false;
        }
        else if (!this.variableScope.equals(other.variableScope))
            return false;
        if (this.dataType == null) {
            if (other.dataType != null)
                return false;
        }
        else if (!this.dataType.equals(other.dataType))
            return false;
        if (this.minValue == null) {
            if (other.minValue != null)
                return false;
        }
        else if (!this.minValue.equals(other.minValue))
            return false;
        if (this.maxValue == null) {
            if (other.maxValue != null)
                return false;
        }
        else if (!this.maxValue.equals(other.maxValue))
            return false;
        if (this.documentation == null) {
            if (other.documentation != null)
                return false;
        }
        else if (!this.documentation.equals(other.documentation))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.variableName == null) ? 0 : this.variableName.hashCode());
        result = prime * result + ((this.variableScope == null) ? 0 : this.variableScope.hashCode());
        result = prime * result + ((this.dataType == null) ? 0 : this.dataType.hashCode());
        result = prime * result + ((this.minValue == null) ? 0 : this.minValue.hashCode());
        result = prime * result + ((this.maxValue == null) ? 0 : this.maxValue.hashCode());
        result = prime * result + ((this.documentation == null) ? 0 : this.documentation.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("VariablesMetadata (");

        sb.append(variableName);
        sb.append(", ").append(variableScope);
        sb.append(", ").append(dataType);
        sb.append(", ").append(minValue);
        sb.append(", ").append(maxValue);
        sb.append(", ").append(documentation);

        sb.append(")");
        return sb.toString();
    }
}
