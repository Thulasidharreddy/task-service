/*
 * This file is generated by jOOQ.
 */
package com.neurasim.jooq.performance_schema.tables.records;


import com.neurasim.jooq.performance_schema.tables.Accounts;

import org.jooq.Field;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.TableRecordImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AccountsRecord extends TableRecordImpl<AccountsRecord> implements Record6<String, String, Long, Long, ULong, ULong> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>performance_schema.accounts.USER</code>.
     */
    public AccountsRecord setUser(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>performance_schema.accounts.USER</code>.
     */
    public String getUser() {
        return (String) get(0);
    }

    /**
     * Setter for <code>performance_schema.accounts.HOST</code>.
     */
    public AccountsRecord setHost(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>performance_schema.accounts.HOST</code>.
     */
    public String getHost() {
        return (String) get(1);
    }

    /**
     * Setter for <code>performance_schema.accounts.CURRENT_CONNECTIONS</code>.
     */
    public AccountsRecord setCurrentConnections(Long value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>performance_schema.accounts.CURRENT_CONNECTIONS</code>.
     */
    public Long getCurrentConnections() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>performance_schema.accounts.TOTAL_CONNECTIONS</code>.
     */
    public AccountsRecord setTotalConnections(Long value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>performance_schema.accounts.TOTAL_CONNECTIONS</code>.
     */
    public Long getTotalConnections() {
        return (Long) get(3);
    }

    /**
     * Setter for
     * <code>performance_schema.accounts.MAX_SESSION_CONTROLLED_MEMORY</code>.
     */
    public AccountsRecord setMaxSessionControlledMemory(ULong value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for
     * <code>performance_schema.accounts.MAX_SESSION_CONTROLLED_MEMORY</code>.
     */
    public ULong getMaxSessionControlledMemory() {
        return (ULong) get(4);
    }

    /**
     * Setter for
     * <code>performance_schema.accounts.MAX_SESSION_TOTAL_MEMORY</code>.
     */
    public AccountsRecord setMaxSessionTotalMemory(ULong value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for
     * <code>performance_schema.accounts.MAX_SESSION_TOTAL_MEMORY</code>.
     */
    public ULong getMaxSessionTotalMemory() {
        return (ULong) get(5);
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<String, String, Long, Long, ULong, ULong> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<String, String, Long, Long, ULong, ULong> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return Accounts.ACCOUNTS.USER;
    }

    @Override
    public Field<String> field2() {
        return Accounts.ACCOUNTS.HOST;
    }

    @Override
    public Field<Long> field3() {
        return Accounts.ACCOUNTS.CURRENT_CONNECTIONS;
    }

    @Override
    public Field<Long> field4() {
        return Accounts.ACCOUNTS.TOTAL_CONNECTIONS;
    }

    @Override
    public Field<ULong> field5() {
        return Accounts.ACCOUNTS.MAX_SESSION_CONTROLLED_MEMORY;
    }

    @Override
    public Field<ULong> field6() {
        return Accounts.ACCOUNTS.MAX_SESSION_TOTAL_MEMORY;
    }

    @Override
    public String component1() {
        return getUser();
    }

    @Override
    public String component2() {
        return getHost();
    }

    @Override
    public Long component3() {
        return getCurrentConnections();
    }

    @Override
    public Long component4() {
        return getTotalConnections();
    }

    @Override
    public ULong component5() {
        return getMaxSessionControlledMemory();
    }

    @Override
    public ULong component6() {
        return getMaxSessionTotalMemory();
    }

    @Override
    public String value1() {
        return getUser();
    }

    @Override
    public String value2() {
        return getHost();
    }

    @Override
    public Long value3() {
        return getCurrentConnections();
    }

    @Override
    public Long value4() {
        return getTotalConnections();
    }

    @Override
    public ULong value5() {
        return getMaxSessionControlledMemory();
    }

    @Override
    public ULong value6() {
        return getMaxSessionTotalMemory();
    }

    @Override
    public AccountsRecord value1(String value) {
        setUser(value);
        return this;
    }

    @Override
    public AccountsRecord value2(String value) {
        setHost(value);
        return this;
    }

    @Override
    public AccountsRecord value3(Long value) {
        setCurrentConnections(value);
        return this;
    }

    @Override
    public AccountsRecord value4(Long value) {
        setTotalConnections(value);
        return this;
    }

    @Override
    public AccountsRecord value5(ULong value) {
        setMaxSessionControlledMemory(value);
        return this;
    }

    @Override
    public AccountsRecord value6(ULong value) {
        setMaxSessionTotalMemory(value);
        return this;
    }

    @Override
    public AccountsRecord values(String value1, String value2, Long value3, Long value4, ULong value5, ULong value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AccountsRecord
     */
    public AccountsRecord() {
        super(Accounts.ACCOUNTS);
    }

    /**
     * Create a detached, initialised AccountsRecord
     */
    public AccountsRecord(String user, String host, Long currentConnections, Long totalConnections, ULong maxSessionControlledMemory, ULong maxSessionTotalMemory) {
        super(Accounts.ACCOUNTS);

        setUser(user);
        setHost(host);
        setCurrentConnections(currentConnections);
        setTotalConnections(totalConnections);
        setMaxSessionControlledMemory(maxSessionControlledMemory);
        setMaxSessionTotalMemory(maxSessionTotalMemory);
    }

    /**
     * Create a detached, initialised AccountsRecord
     */
    public AccountsRecord(com.neurasim.jooq.performance_schema.tables.pojos.Accounts value) {
        super(Accounts.ACCOUNTS);

        if (value != null) {
            setUser(value.getUser());
            setHost(value.getHost());
            setCurrentConnections(value.getCurrentConnections());
            setTotalConnections(value.getTotalConnections());
            setMaxSessionControlledMemory(value.getMaxSessionControlledMemory());
            setMaxSessionTotalMemory(value.getMaxSessionTotalMemory());
        }
    }
}
