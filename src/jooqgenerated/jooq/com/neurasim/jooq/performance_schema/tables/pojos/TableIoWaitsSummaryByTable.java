/*
 * This file is generated by jOOQ.
 */
package com.neurasim.jooq.performance_schema.tables.pojos;


import java.io.Serializable;

import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TableIoWaitsSummaryByTable implements Serializable {

    private static final long serialVersionUID = 1L;

    private final String objectType;
    private final String objectSchema;
    private final String objectName;
    private final ULong countStar;
    private final ULong sumTimerWait;
    private final ULong minTimerWait;
    private final ULong avgTimerWait;
    private final ULong maxTimerWait;
    private final ULong countRead;
    private final ULong sumTimerRead;
    private final ULong minTimerRead;
    private final ULong avgTimerRead;
    private final ULong maxTimerRead;
    private final ULong countWrite;
    private final ULong sumTimerWrite;
    private final ULong minTimerWrite;
    private final ULong avgTimerWrite;
    private final ULong maxTimerWrite;
    private final ULong countFetch;
    private final ULong sumTimerFetch;
    private final ULong minTimerFetch;
    private final ULong avgTimerFetch;
    private final ULong maxTimerFetch;
    private final ULong countInsert;
    private final ULong sumTimerInsert;
    private final ULong minTimerInsert;
    private final ULong avgTimerInsert;
    private final ULong maxTimerInsert;
    private final ULong countUpdate;
    private final ULong sumTimerUpdate;
    private final ULong minTimerUpdate;
    private final ULong avgTimerUpdate;
    private final ULong maxTimerUpdate;
    private final ULong countDelete;
    private final ULong sumTimerDelete;
    private final ULong minTimerDelete;
    private final ULong avgTimerDelete;
    private final ULong maxTimerDelete;

    public TableIoWaitsSummaryByTable(TableIoWaitsSummaryByTable value) {
        this.objectType = value.objectType;
        this.objectSchema = value.objectSchema;
        this.objectName = value.objectName;
        this.countStar = value.countStar;
        this.sumTimerWait = value.sumTimerWait;
        this.minTimerWait = value.minTimerWait;
        this.avgTimerWait = value.avgTimerWait;
        this.maxTimerWait = value.maxTimerWait;
        this.countRead = value.countRead;
        this.sumTimerRead = value.sumTimerRead;
        this.minTimerRead = value.minTimerRead;
        this.avgTimerRead = value.avgTimerRead;
        this.maxTimerRead = value.maxTimerRead;
        this.countWrite = value.countWrite;
        this.sumTimerWrite = value.sumTimerWrite;
        this.minTimerWrite = value.minTimerWrite;
        this.avgTimerWrite = value.avgTimerWrite;
        this.maxTimerWrite = value.maxTimerWrite;
        this.countFetch = value.countFetch;
        this.sumTimerFetch = value.sumTimerFetch;
        this.minTimerFetch = value.minTimerFetch;
        this.avgTimerFetch = value.avgTimerFetch;
        this.maxTimerFetch = value.maxTimerFetch;
        this.countInsert = value.countInsert;
        this.sumTimerInsert = value.sumTimerInsert;
        this.minTimerInsert = value.minTimerInsert;
        this.avgTimerInsert = value.avgTimerInsert;
        this.maxTimerInsert = value.maxTimerInsert;
        this.countUpdate = value.countUpdate;
        this.sumTimerUpdate = value.sumTimerUpdate;
        this.minTimerUpdate = value.minTimerUpdate;
        this.avgTimerUpdate = value.avgTimerUpdate;
        this.maxTimerUpdate = value.maxTimerUpdate;
        this.countDelete = value.countDelete;
        this.sumTimerDelete = value.sumTimerDelete;
        this.minTimerDelete = value.minTimerDelete;
        this.avgTimerDelete = value.avgTimerDelete;
        this.maxTimerDelete = value.maxTimerDelete;
    }

    public TableIoWaitsSummaryByTable(
        String objectType,
        String objectSchema,
        String objectName,
        ULong countStar,
        ULong sumTimerWait,
        ULong minTimerWait,
        ULong avgTimerWait,
        ULong maxTimerWait,
        ULong countRead,
        ULong sumTimerRead,
        ULong minTimerRead,
        ULong avgTimerRead,
        ULong maxTimerRead,
        ULong countWrite,
        ULong sumTimerWrite,
        ULong minTimerWrite,
        ULong avgTimerWrite,
        ULong maxTimerWrite,
        ULong countFetch,
        ULong sumTimerFetch,
        ULong minTimerFetch,
        ULong avgTimerFetch,
        ULong maxTimerFetch,
        ULong countInsert,
        ULong sumTimerInsert,
        ULong minTimerInsert,
        ULong avgTimerInsert,
        ULong maxTimerInsert,
        ULong countUpdate,
        ULong sumTimerUpdate,
        ULong minTimerUpdate,
        ULong avgTimerUpdate,
        ULong maxTimerUpdate,
        ULong countDelete,
        ULong sumTimerDelete,
        ULong minTimerDelete,
        ULong avgTimerDelete,
        ULong maxTimerDelete
    ) {
        this.objectType = objectType;
        this.objectSchema = objectSchema;
        this.objectName = objectName;
        this.countStar = countStar;
        this.sumTimerWait = sumTimerWait;
        this.minTimerWait = minTimerWait;
        this.avgTimerWait = avgTimerWait;
        this.maxTimerWait = maxTimerWait;
        this.countRead = countRead;
        this.sumTimerRead = sumTimerRead;
        this.minTimerRead = minTimerRead;
        this.avgTimerRead = avgTimerRead;
        this.maxTimerRead = maxTimerRead;
        this.countWrite = countWrite;
        this.sumTimerWrite = sumTimerWrite;
        this.minTimerWrite = minTimerWrite;
        this.avgTimerWrite = avgTimerWrite;
        this.maxTimerWrite = maxTimerWrite;
        this.countFetch = countFetch;
        this.sumTimerFetch = sumTimerFetch;
        this.minTimerFetch = minTimerFetch;
        this.avgTimerFetch = avgTimerFetch;
        this.maxTimerFetch = maxTimerFetch;
        this.countInsert = countInsert;
        this.sumTimerInsert = sumTimerInsert;
        this.minTimerInsert = minTimerInsert;
        this.avgTimerInsert = avgTimerInsert;
        this.maxTimerInsert = maxTimerInsert;
        this.countUpdate = countUpdate;
        this.sumTimerUpdate = sumTimerUpdate;
        this.minTimerUpdate = minTimerUpdate;
        this.avgTimerUpdate = avgTimerUpdate;
        this.maxTimerUpdate = maxTimerUpdate;
        this.countDelete = countDelete;
        this.sumTimerDelete = sumTimerDelete;
        this.minTimerDelete = minTimerDelete;
        this.avgTimerDelete = avgTimerDelete;
        this.maxTimerDelete = maxTimerDelete;
    }

    /**
     * Getter for
     * <code>performance_schema.table_io_waits_summary_by_table.OBJECT_TYPE</code>.
     */
    public String getObjectType() {
        return this.objectType;
    }

    /**
     * Getter for
     * <code>performance_schema.table_io_waits_summary_by_table.OBJECT_SCHEMA</code>.
     */
    public String getObjectSchema() {
        return this.objectSchema;
    }

    /**
     * Getter for
     * <code>performance_schema.table_io_waits_summary_by_table.OBJECT_NAME</code>.
     */
    public String getObjectName() {
        return this.objectName;
    }

    /**
     * Getter for
     * <code>performance_schema.table_io_waits_summary_by_table.COUNT_STAR</code>.
     */
    public ULong getCountStar() {
        return this.countStar;
    }

    /**
     * Getter for
     * <code>performance_schema.table_io_waits_summary_by_table.SUM_TIMER_WAIT</code>.
     */
    public ULong getSumTimerWait() {
        return this.sumTimerWait;
    }

    /**
     * Getter for
     * <code>performance_schema.table_io_waits_summary_by_table.MIN_TIMER_WAIT</code>.
     */
    public ULong getMinTimerWait() {
        return this.minTimerWait;
    }

    /**
     * Getter for
     * <code>performance_schema.table_io_waits_summary_by_table.AVG_TIMER_WAIT</code>.
     */
    public ULong getAvgTimerWait() {
        return this.avgTimerWait;
    }

    /**
     * Getter for
     * <code>performance_schema.table_io_waits_summary_by_table.MAX_TIMER_WAIT</code>.
     */
    public ULong getMaxTimerWait() {
        return this.maxTimerWait;
    }

    /**
     * Getter for
     * <code>performance_schema.table_io_waits_summary_by_table.COUNT_READ</code>.
     */
    public ULong getCountRead() {
        return this.countRead;
    }

    /**
     * Getter for
     * <code>performance_schema.table_io_waits_summary_by_table.SUM_TIMER_READ</code>.
     */
    public ULong getSumTimerRead() {
        return this.sumTimerRead;
    }

    /**
     * Getter for
     * <code>performance_schema.table_io_waits_summary_by_table.MIN_TIMER_READ</code>.
     */
    public ULong getMinTimerRead() {
        return this.minTimerRead;
    }

    /**
     * Getter for
     * <code>performance_schema.table_io_waits_summary_by_table.AVG_TIMER_READ</code>.
     */
    public ULong getAvgTimerRead() {
        return this.avgTimerRead;
    }

    /**
     * Getter for
     * <code>performance_schema.table_io_waits_summary_by_table.MAX_TIMER_READ</code>.
     */
    public ULong getMaxTimerRead() {
        return this.maxTimerRead;
    }

    /**
     * Getter for
     * <code>performance_schema.table_io_waits_summary_by_table.COUNT_WRITE</code>.
     */
    public ULong getCountWrite() {
        return this.countWrite;
    }

    /**
     * Getter for
     * <code>performance_schema.table_io_waits_summary_by_table.SUM_TIMER_WRITE</code>.
     */
    public ULong getSumTimerWrite() {
        return this.sumTimerWrite;
    }

    /**
     * Getter for
     * <code>performance_schema.table_io_waits_summary_by_table.MIN_TIMER_WRITE</code>.
     */
    public ULong getMinTimerWrite() {
        return this.minTimerWrite;
    }

    /**
     * Getter for
     * <code>performance_schema.table_io_waits_summary_by_table.AVG_TIMER_WRITE</code>.
     */
    public ULong getAvgTimerWrite() {
        return this.avgTimerWrite;
    }

    /**
     * Getter for
     * <code>performance_schema.table_io_waits_summary_by_table.MAX_TIMER_WRITE</code>.
     */
    public ULong getMaxTimerWrite() {
        return this.maxTimerWrite;
    }

    /**
     * Getter for
     * <code>performance_schema.table_io_waits_summary_by_table.COUNT_FETCH</code>.
     */
    public ULong getCountFetch() {
        return this.countFetch;
    }

    /**
     * Getter for
     * <code>performance_schema.table_io_waits_summary_by_table.SUM_TIMER_FETCH</code>.
     */
    public ULong getSumTimerFetch() {
        return this.sumTimerFetch;
    }

    /**
     * Getter for
     * <code>performance_schema.table_io_waits_summary_by_table.MIN_TIMER_FETCH</code>.
     */
    public ULong getMinTimerFetch() {
        return this.minTimerFetch;
    }

    /**
     * Getter for
     * <code>performance_schema.table_io_waits_summary_by_table.AVG_TIMER_FETCH</code>.
     */
    public ULong getAvgTimerFetch() {
        return this.avgTimerFetch;
    }

    /**
     * Getter for
     * <code>performance_schema.table_io_waits_summary_by_table.MAX_TIMER_FETCH</code>.
     */
    public ULong getMaxTimerFetch() {
        return this.maxTimerFetch;
    }

    /**
     * Getter for
     * <code>performance_schema.table_io_waits_summary_by_table.COUNT_INSERT</code>.
     */
    public ULong getCountInsert() {
        return this.countInsert;
    }

    /**
     * Getter for
     * <code>performance_schema.table_io_waits_summary_by_table.SUM_TIMER_INSERT</code>.
     */
    public ULong getSumTimerInsert() {
        return this.sumTimerInsert;
    }

    /**
     * Getter for
     * <code>performance_schema.table_io_waits_summary_by_table.MIN_TIMER_INSERT</code>.
     */
    public ULong getMinTimerInsert() {
        return this.minTimerInsert;
    }

    /**
     * Getter for
     * <code>performance_schema.table_io_waits_summary_by_table.AVG_TIMER_INSERT</code>.
     */
    public ULong getAvgTimerInsert() {
        return this.avgTimerInsert;
    }

    /**
     * Getter for
     * <code>performance_schema.table_io_waits_summary_by_table.MAX_TIMER_INSERT</code>.
     */
    public ULong getMaxTimerInsert() {
        return this.maxTimerInsert;
    }

    /**
     * Getter for
     * <code>performance_schema.table_io_waits_summary_by_table.COUNT_UPDATE</code>.
     */
    public ULong getCountUpdate() {
        return this.countUpdate;
    }

    /**
     * Getter for
     * <code>performance_schema.table_io_waits_summary_by_table.SUM_TIMER_UPDATE</code>.
     */
    public ULong getSumTimerUpdate() {
        return this.sumTimerUpdate;
    }

    /**
     * Getter for
     * <code>performance_schema.table_io_waits_summary_by_table.MIN_TIMER_UPDATE</code>.
     */
    public ULong getMinTimerUpdate() {
        return this.minTimerUpdate;
    }

    /**
     * Getter for
     * <code>performance_schema.table_io_waits_summary_by_table.AVG_TIMER_UPDATE</code>.
     */
    public ULong getAvgTimerUpdate() {
        return this.avgTimerUpdate;
    }

    /**
     * Getter for
     * <code>performance_schema.table_io_waits_summary_by_table.MAX_TIMER_UPDATE</code>.
     */
    public ULong getMaxTimerUpdate() {
        return this.maxTimerUpdate;
    }

    /**
     * Getter for
     * <code>performance_schema.table_io_waits_summary_by_table.COUNT_DELETE</code>.
     */
    public ULong getCountDelete() {
        return this.countDelete;
    }

    /**
     * Getter for
     * <code>performance_schema.table_io_waits_summary_by_table.SUM_TIMER_DELETE</code>.
     */
    public ULong getSumTimerDelete() {
        return this.sumTimerDelete;
    }

    /**
     * Getter for
     * <code>performance_schema.table_io_waits_summary_by_table.MIN_TIMER_DELETE</code>.
     */
    public ULong getMinTimerDelete() {
        return this.minTimerDelete;
    }

    /**
     * Getter for
     * <code>performance_schema.table_io_waits_summary_by_table.AVG_TIMER_DELETE</code>.
     */
    public ULong getAvgTimerDelete() {
        return this.avgTimerDelete;
    }

    /**
     * Getter for
     * <code>performance_schema.table_io_waits_summary_by_table.MAX_TIMER_DELETE</code>.
     */
    public ULong getMaxTimerDelete() {
        return this.maxTimerDelete;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final TableIoWaitsSummaryByTable other = (TableIoWaitsSummaryByTable) obj;
        if (this.objectType == null) {
            if (other.objectType != null)
                return false;
        }
        else if (!this.objectType.equals(other.objectType))
            return false;
        if (this.objectSchema == null) {
            if (other.objectSchema != null)
                return false;
        }
        else if (!this.objectSchema.equals(other.objectSchema))
            return false;
        if (this.objectName == null) {
            if (other.objectName != null)
                return false;
        }
        else if (!this.objectName.equals(other.objectName))
            return false;
        if (this.countStar == null) {
            if (other.countStar != null)
                return false;
        }
        else if (!this.countStar.equals(other.countStar))
            return false;
        if (this.sumTimerWait == null) {
            if (other.sumTimerWait != null)
                return false;
        }
        else if (!this.sumTimerWait.equals(other.sumTimerWait))
            return false;
        if (this.minTimerWait == null) {
            if (other.minTimerWait != null)
                return false;
        }
        else if (!this.minTimerWait.equals(other.minTimerWait))
            return false;
        if (this.avgTimerWait == null) {
            if (other.avgTimerWait != null)
                return false;
        }
        else if (!this.avgTimerWait.equals(other.avgTimerWait))
            return false;
        if (this.maxTimerWait == null) {
            if (other.maxTimerWait != null)
                return false;
        }
        else if (!this.maxTimerWait.equals(other.maxTimerWait))
            return false;
        if (this.countRead == null) {
            if (other.countRead != null)
                return false;
        }
        else if (!this.countRead.equals(other.countRead))
            return false;
        if (this.sumTimerRead == null) {
            if (other.sumTimerRead != null)
                return false;
        }
        else if (!this.sumTimerRead.equals(other.sumTimerRead))
            return false;
        if (this.minTimerRead == null) {
            if (other.minTimerRead != null)
                return false;
        }
        else if (!this.minTimerRead.equals(other.minTimerRead))
            return false;
        if (this.avgTimerRead == null) {
            if (other.avgTimerRead != null)
                return false;
        }
        else if (!this.avgTimerRead.equals(other.avgTimerRead))
            return false;
        if (this.maxTimerRead == null) {
            if (other.maxTimerRead != null)
                return false;
        }
        else if (!this.maxTimerRead.equals(other.maxTimerRead))
            return false;
        if (this.countWrite == null) {
            if (other.countWrite != null)
                return false;
        }
        else if (!this.countWrite.equals(other.countWrite))
            return false;
        if (this.sumTimerWrite == null) {
            if (other.sumTimerWrite != null)
                return false;
        }
        else if (!this.sumTimerWrite.equals(other.sumTimerWrite))
            return false;
        if (this.minTimerWrite == null) {
            if (other.minTimerWrite != null)
                return false;
        }
        else if (!this.minTimerWrite.equals(other.minTimerWrite))
            return false;
        if (this.avgTimerWrite == null) {
            if (other.avgTimerWrite != null)
                return false;
        }
        else if (!this.avgTimerWrite.equals(other.avgTimerWrite))
            return false;
        if (this.maxTimerWrite == null) {
            if (other.maxTimerWrite != null)
                return false;
        }
        else if (!this.maxTimerWrite.equals(other.maxTimerWrite))
            return false;
        if (this.countFetch == null) {
            if (other.countFetch != null)
                return false;
        }
        else if (!this.countFetch.equals(other.countFetch))
            return false;
        if (this.sumTimerFetch == null) {
            if (other.sumTimerFetch != null)
                return false;
        }
        else if (!this.sumTimerFetch.equals(other.sumTimerFetch))
            return false;
        if (this.minTimerFetch == null) {
            if (other.minTimerFetch != null)
                return false;
        }
        else if (!this.minTimerFetch.equals(other.minTimerFetch))
            return false;
        if (this.avgTimerFetch == null) {
            if (other.avgTimerFetch != null)
                return false;
        }
        else if (!this.avgTimerFetch.equals(other.avgTimerFetch))
            return false;
        if (this.maxTimerFetch == null) {
            if (other.maxTimerFetch != null)
                return false;
        }
        else if (!this.maxTimerFetch.equals(other.maxTimerFetch))
            return false;
        if (this.countInsert == null) {
            if (other.countInsert != null)
                return false;
        }
        else if (!this.countInsert.equals(other.countInsert))
            return false;
        if (this.sumTimerInsert == null) {
            if (other.sumTimerInsert != null)
                return false;
        }
        else if (!this.sumTimerInsert.equals(other.sumTimerInsert))
            return false;
        if (this.minTimerInsert == null) {
            if (other.minTimerInsert != null)
                return false;
        }
        else if (!this.minTimerInsert.equals(other.minTimerInsert))
            return false;
        if (this.avgTimerInsert == null) {
            if (other.avgTimerInsert != null)
                return false;
        }
        else if (!this.avgTimerInsert.equals(other.avgTimerInsert))
            return false;
        if (this.maxTimerInsert == null) {
            if (other.maxTimerInsert != null)
                return false;
        }
        else if (!this.maxTimerInsert.equals(other.maxTimerInsert))
            return false;
        if (this.countUpdate == null) {
            if (other.countUpdate != null)
                return false;
        }
        else if (!this.countUpdate.equals(other.countUpdate))
            return false;
        if (this.sumTimerUpdate == null) {
            if (other.sumTimerUpdate != null)
                return false;
        }
        else if (!this.sumTimerUpdate.equals(other.sumTimerUpdate))
            return false;
        if (this.minTimerUpdate == null) {
            if (other.minTimerUpdate != null)
                return false;
        }
        else if (!this.minTimerUpdate.equals(other.minTimerUpdate))
            return false;
        if (this.avgTimerUpdate == null) {
            if (other.avgTimerUpdate != null)
                return false;
        }
        else if (!this.avgTimerUpdate.equals(other.avgTimerUpdate))
            return false;
        if (this.maxTimerUpdate == null) {
            if (other.maxTimerUpdate != null)
                return false;
        }
        else if (!this.maxTimerUpdate.equals(other.maxTimerUpdate))
            return false;
        if (this.countDelete == null) {
            if (other.countDelete != null)
                return false;
        }
        else if (!this.countDelete.equals(other.countDelete))
            return false;
        if (this.sumTimerDelete == null) {
            if (other.sumTimerDelete != null)
                return false;
        }
        else if (!this.sumTimerDelete.equals(other.sumTimerDelete))
            return false;
        if (this.minTimerDelete == null) {
            if (other.minTimerDelete != null)
                return false;
        }
        else if (!this.minTimerDelete.equals(other.minTimerDelete))
            return false;
        if (this.avgTimerDelete == null) {
            if (other.avgTimerDelete != null)
                return false;
        }
        else if (!this.avgTimerDelete.equals(other.avgTimerDelete))
            return false;
        if (this.maxTimerDelete == null) {
            if (other.maxTimerDelete != null)
                return false;
        }
        else if (!this.maxTimerDelete.equals(other.maxTimerDelete))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.objectType == null) ? 0 : this.objectType.hashCode());
        result = prime * result + ((this.objectSchema == null) ? 0 : this.objectSchema.hashCode());
        result = prime * result + ((this.objectName == null) ? 0 : this.objectName.hashCode());
        result = prime * result + ((this.countStar == null) ? 0 : this.countStar.hashCode());
        result = prime * result + ((this.sumTimerWait == null) ? 0 : this.sumTimerWait.hashCode());
        result = prime * result + ((this.minTimerWait == null) ? 0 : this.minTimerWait.hashCode());
        result = prime * result + ((this.avgTimerWait == null) ? 0 : this.avgTimerWait.hashCode());
        result = prime * result + ((this.maxTimerWait == null) ? 0 : this.maxTimerWait.hashCode());
        result = prime * result + ((this.countRead == null) ? 0 : this.countRead.hashCode());
        result = prime * result + ((this.sumTimerRead == null) ? 0 : this.sumTimerRead.hashCode());
        result = prime * result + ((this.minTimerRead == null) ? 0 : this.minTimerRead.hashCode());
        result = prime * result + ((this.avgTimerRead == null) ? 0 : this.avgTimerRead.hashCode());
        result = prime * result + ((this.maxTimerRead == null) ? 0 : this.maxTimerRead.hashCode());
        result = prime * result + ((this.countWrite == null) ? 0 : this.countWrite.hashCode());
        result = prime * result + ((this.sumTimerWrite == null) ? 0 : this.sumTimerWrite.hashCode());
        result = prime * result + ((this.minTimerWrite == null) ? 0 : this.minTimerWrite.hashCode());
        result = prime * result + ((this.avgTimerWrite == null) ? 0 : this.avgTimerWrite.hashCode());
        result = prime * result + ((this.maxTimerWrite == null) ? 0 : this.maxTimerWrite.hashCode());
        result = prime * result + ((this.countFetch == null) ? 0 : this.countFetch.hashCode());
        result = prime * result + ((this.sumTimerFetch == null) ? 0 : this.sumTimerFetch.hashCode());
        result = prime * result + ((this.minTimerFetch == null) ? 0 : this.minTimerFetch.hashCode());
        result = prime * result + ((this.avgTimerFetch == null) ? 0 : this.avgTimerFetch.hashCode());
        result = prime * result + ((this.maxTimerFetch == null) ? 0 : this.maxTimerFetch.hashCode());
        result = prime * result + ((this.countInsert == null) ? 0 : this.countInsert.hashCode());
        result = prime * result + ((this.sumTimerInsert == null) ? 0 : this.sumTimerInsert.hashCode());
        result = prime * result + ((this.minTimerInsert == null) ? 0 : this.minTimerInsert.hashCode());
        result = prime * result + ((this.avgTimerInsert == null) ? 0 : this.avgTimerInsert.hashCode());
        result = prime * result + ((this.maxTimerInsert == null) ? 0 : this.maxTimerInsert.hashCode());
        result = prime * result + ((this.countUpdate == null) ? 0 : this.countUpdate.hashCode());
        result = prime * result + ((this.sumTimerUpdate == null) ? 0 : this.sumTimerUpdate.hashCode());
        result = prime * result + ((this.minTimerUpdate == null) ? 0 : this.minTimerUpdate.hashCode());
        result = prime * result + ((this.avgTimerUpdate == null) ? 0 : this.avgTimerUpdate.hashCode());
        result = prime * result + ((this.maxTimerUpdate == null) ? 0 : this.maxTimerUpdate.hashCode());
        result = prime * result + ((this.countDelete == null) ? 0 : this.countDelete.hashCode());
        result = prime * result + ((this.sumTimerDelete == null) ? 0 : this.sumTimerDelete.hashCode());
        result = prime * result + ((this.minTimerDelete == null) ? 0 : this.minTimerDelete.hashCode());
        result = prime * result + ((this.avgTimerDelete == null) ? 0 : this.avgTimerDelete.hashCode());
        result = prime * result + ((this.maxTimerDelete == null) ? 0 : this.maxTimerDelete.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("TableIoWaitsSummaryByTable (");

        sb.append(objectType);
        sb.append(", ").append(objectSchema);
        sb.append(", ").append(objectName);
        sb.append(", ").append(countStar);
        sb.append(", ").append(sumTimerWait);
        sb.append(", ").append(minTimerWait);
        sb.append(", ").append(avgTimerWait);
        sb.append(", ").append(maxTimerWait);
        sb.append(", ").append(countRead);
        sb.append(", ").append(sumTimerRead);
        sb.append(", ").append(minTimerRead);
        sb.append(", ").append(avgTimerRead);
        sb.append(", ").append(maxTimerRead);
        sb.append(", ").append(countWrite);
        sb.append(", ").append(sumTimerWrite);
        sb.append(", ").append(minTimerWrite);
        sb.append(", ").append(avgTimerWrite);
        sb.append(", ").append(maxTimerWrite);
        sb.append(", ").append(countFetch);
        sb.append(", ").append(sumTimerFetch);
        sb.append(", ").append(minTimerFetch);
        sb.append(", ").append(avgTimerFetch);
        sb.append(", ").append(maxTimerFetch);
        sb.append(", ").append(countInsert);
        sb.append(", ").append(sumTimerInsert);
        sb.append(", ").append(minTimerInsert);
        sb.append(", ").append(avgTimerInsert);
        sb.append(", ").append(maxTimerInsert);
        sb.append(", ").append(countUpdate);
        sb.append(", ").append(sumTimerUpdate);
        sb.append(", ").append(minTimerUpdate);
        sb.append(", ").append(avgTimerUpdate);
        sb.append(", ").append(maxTimerUpdate);
        sb.append(", ").append(countDelete);
        sb.append(", ").append(sumTimerDelete);
        sb.append(", ").append(minTimerDelete);
        sb.append(", ").append(avgTimerDelete);
        sb.append(", ").append(maxTimerDelete);

        sb.append(")");
        return sb.toString();
    }
}
