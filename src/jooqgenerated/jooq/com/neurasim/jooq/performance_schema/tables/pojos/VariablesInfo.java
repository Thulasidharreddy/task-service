/*
 * This file is generated by jOOQ.
 */
package com.neurasim.jooq.performance_schema.tables.pojos;


import com.neurasim.jooq.performance_schema.enums.VariablesInfoVariableSource;

import java.io.Serializable;
import java.time.LocalDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class VariablesInfo implements Serializable {

    private static final long serialVersionUID = 1L;

    private final String variableName;
    private final VariablesInfoVariableSource variableSource;
    private final String variablePath;
    private final String minValue;
    private final String maxValue;
    private final LocalDateTime setTime;
    private final String setUser;
    private final String setHost;

    public VariablesInfo(VariablesInfo value) {
        this.variableName = value.variableName;
        this.variableSource = value.variableSource;
        this.variablePath = value.variablePath;
        this.minValue = value.minValue;
        this.maxValue = value.maxValue;
        this.setTime = value.setTime;
        this.setUser = value.setUser;
        this.setHost = value.setHost;
    }

    public VariablesInfo(
        String variableName,
        VariablesInfoVariableSource variableSource,
        String variablePath,
        String minValue,
        String maxValue,
        LocalDateTime setTime,
        String setUser,
        String setHost
    ) {
        this.variableName = variableName;
        this.variableSource = variableSource;
        this.variablePath = variablePath;
        this.minValue = minValue;
        this.maxValue = maxValue;
        this.setTime = setTime;
        this.setUser = setUser;
        this.setHost = setHost;
    }

    /**
     * Getter for <code>performance_schema.variables_info.VARIABLE_NAME</code>.
     */
    public String getVariableName() {
        return this.variableName;
    }

    /**
     * Getter for
     * <code>performance_schema.variables_info.VARIABLE_SOURCE</code>.
     */
    public VariablesInfoVariableSource getVariableSource() {
        return this.variableSource;
    }

    /**
     * Getter for <code>performance_schema.variables_info.VARIABLE_PATH</code>.
     */
    public String getVariablePath() {
        return this.variablePath;
    }

    /**
     * Getter for <code>performance_schema.variables_info.MIN_VALUE</code>.
     */
    public String getMinValue() {
        return this.minValue;
    }

    /**
     * Getter for <code>performance_schema.variables_info.MAX_VALUE</code>.
     */
    public String getMaxValue() {
        return this.maxValue;
    }

    /**
     * Getter for <code>performance_schema.variables_info.SET_TIME</code>.
     */
    public LocalDateTime getSetTime() {
        return this.setTime;
    }

    /**
     * Getter for <code>performance_schema.variables_info.SET_USER</code>.
     */
    public String getSetUser() {
        return this.setUser;
    }

    /**
     * Getter for <code>performance_schema.variables_info.SET_HOST</code>.
     */
    public String getSetHost() {
        return this.setHost;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final VariablesInfo other = (VariablesInfo) obj;
        if (this.variableName == null) {
            if (other.variableName != null)
                return false;
        }
        else if (!this.variableName.equals(other.variableName))
            return false;
        if (this.variableSource == null) {
            if (other.variableSource != null)
                return false;
        }
        else if (!this.variableSource.equals(other.variableSource))
            return false;
        if (this.variablePath == null) {
            if (other.variablePath != null)
                return false;
        }
        else if (!this.variablePath.equals(other.variablePath))
            return false;
        if (this.minValue == null) {
            if (other.minValue != null)
                return false;
        }
        else if (!this.minValue.equals(other.minValue))
            return false;
        if (this.maxValue == null) {
            if (other.maxValue != null)
                return false;
        }
        else if (!this.maxValue.equals(other.maxValue))
            return false;
        if (this.setTime == null) {
            if (other.setTime != null)
                return false;
        }
        else if (!this.setTime.equals(other.setTime))
            return false;
        if (this.setUser == null) {
            if (other.setUser != null)
                return false;
        }
        else if (!this.setUser.equals(other.setUser))
            return false;
        if (this.setHost == null) {
            if (other.setHost != null)
                return false;
        }
        else if (!this.setHost.equals(other.setHost))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.variableName == null) ? 0 : this.variableName.hashCode());
        result = prime * result + ((this.variableSource == null) ? 0 : this.variableSource.hashCode());
        result = prime * result + ((this.variablePath == null) ? 0 : this.variablePath.hashCode());
        result = prime * result + ((this.minValue == null) ? 0 : this.minValue.hashCode());
        result = prime * result + ((this.maxValue == null) ? 0 : this.maxValue.hashCode());
        result = prime * result + ((this.setTime == null) ? 0 : this.setTime.hashCode());
        result = prime * result + ((this.setUser == null) ? 0 : this.setUser.hashCode());
        result = prime * result + ((this.setHost == null) ? 0 : this.setHost.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("VariablesInfo (");

        sb.append(variableName);
        sb.append(", ").append(variableSource);
        sb.append(", ").append(variablePath);
        sb.append(", ").append(minValue);
        sb.append(", ").append(maxValue);
        sb.append(", ").append(setTime);
        sb.append(", ").append(setUser);
        sb.append(", ").append(setHost);

        sb.append(")");
        return sb.toString();
    }
}
