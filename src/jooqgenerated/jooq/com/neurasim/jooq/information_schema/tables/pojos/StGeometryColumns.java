/*
 * This file is generated by jOOQ.
 */
package com.neurasim.jooq.information_schema.tables.pojos;


import java.io.Serializable;

import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StGeometryColumns implements Serializable {

    private static final long serialVersionUID = 1L;

    private final String tableCatalog;
    private final String tableSchema;
    private final String tableName;
    private final String columnName;
    private final String srsName;
    private final UInteger srsId;
    private final String geometryTypeName;

    public StGeometryColumns(StGeometryColumns value) {
        this.tableCatalog = value.tableCatalog;
        this.tableSchema = value.tableSchema;
        this.tableName = value.tableName;
        this.columnName = value.columnName;
        this.srsName = value.srsName;
        this.srsId = value.srsId;
        this.geometryTypeName = value.geometryTypeName;
    }

    public StGeometryColumns(
        String tableCatalog,
        String tableSchema,
        String tableName,
        String columnName,
        String srsName,
        UInteger srsId,
        String geometryTypeName
    ) {
        this.tableCatalog = tableCatalog;
        this.tableSchema = tableSchema;
        this.tableName = tableName;
        this.columnName = columnName;
        this.srsName = srsName;
        this.srsId = srsId;
        this.geometryTypeName = geometryTypeName;
    }

    /**
     * Getter for
     * <code>information_schema.ST_GEOMETRY_COLUMNS.TABLE_CATALOG</code>.
     */
    public String getTableCatalog() {
        return this.tableCatalog;
    }

    /**
     * Getter for
     * <code>information_schema.ST_GEOMETRY_COLUMNS.TABLE_SCHEMA</code>.
     */
    public String getTableSchema() {
        return this.tableSchema;
    }

    /**
     * Getter for
     * <code>information_schema.ST_GEOMETRY_COLUMNS.TABLE_NAME</code>.
     */
    public String getTableName() {
        return this.tableName;
    }

    /**
     * Getter for
     * <code>information_schema.ST_GEOMETRY_COLUMNS.COLUMN_NAME</code>.
     */
    public String getColumnName() {
        return this.columnName;
    }

    /**
     * Getter for <code>information_schema.ST_GEOMETRY_COLUMNS.SRS_NAME</code>.
     */
    public String getSrsName() {
        return this.srsName;
    }

    /**
     * Getter for <code>information_schema.ST_GEOMETRY_COLUMNS.SRS_ID</code>.
     */
    public UInteger getSrsId() {
        return this.srsId;
    }

    /**
     * Getter for
     * <code>information_schema.ST_GEOMETRY_COLUMNS.GEOMETRY_TYPE_NAME</code>.
     */
    public String getGeometryTypeName() {
        return this.geometryTypeName;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final StGeometryColumns other = (StGeometryColumns) obj;
        if (this.tableCatalog == null) {
            if (other.tableCatalog != null)
                return false;
        }
        else if (!this.tableCatalog.equals(other.tableCatalog))
            return false;
        if (this.tableSchema == null) {
            if (other.tableSchema != null)
                return false;
        }
        else if (!this.tableSchema.equals(other.tableSchema))
            return false;
        if (this.tableName == null) {
            if (other.tableName != null)
                return false;
        }
        else if (!this.tableName.equals(other.tableName))
            return false;
        if (this.columnName == null) {
            if (other.columnName != null)
                return false;
        }
        else if (!this.columnName.equals(other.columnName))
            return false;
        if (this.srsName == null) {
            if (other.srsName != null)
                return false;
        }
        else if (!this.srsName.equals(other.srsName))
            return false;
        if (this.srsId == null) {
            if (other.srsId != null)
                return false;
        }
        else if (!this.srsId.equals(other.srsId))
            return false;
        if (this.geometryTypeName == null) {
            if (other.geometryTypeName != null)
                return false;
        }
        else if (!this.geometryTypeName.equals(other.geometryTypeName))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.tableCatalog == null) ? 0 : this.tableCatalog.hashCode());
        result = prime * result + ((this.tableSchema == null) ? 0 : this.tableSchema.hashCode());
        result = prime * result + ((this.tableName == null) ? 0 : this.tableName.hashCode());
        result = prime * result + ((this.columnName == null) ? 0 : this.columnName.hashCode());
        result = prime * result + ((this.srsName == null) ? 0 : this.srsName.hashCode());
        result = prime * result + ((this.srsId == null) ? 0 : this.srsId.hashCode());
        result = prime * result + ((this.geometryTypeName == null) ? 0 : this.geometryTypeName.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("StGeometryColumns (");

        sb.append(tableCatalog);
        sb.append(", ").append(tableSchema);
        sb.append(", ").append(tableName);
        sb.append(", ").append(columnName);
        sb.append(", ").append(srsName);
        sb.append(", ").append(srsId);
        sb.append(", ").append(geometryTypeName);

        sb.append(")");
        return sb.toString();
    }
}
