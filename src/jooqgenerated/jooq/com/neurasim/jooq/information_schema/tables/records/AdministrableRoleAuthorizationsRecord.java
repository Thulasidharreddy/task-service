/*
 * This file is generated by jOOQ.
 */
package com.neurasim.jooq.information_schema.tables.records;


import com.neurasim.jooq.information_schema.tables.AdministrableRoleAuthorizations;

import org.jooq.Field;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AdministrableRoleAuthorizationsRecord extends TableRecordImpl<AdministrableRoleAuthorizationsRecord> implements Record9<String, String, String, String, String, String, String, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for
     * <code>information_schema.ADMINISTRABLE_ROLE_AUTHORIZATIONS.USER</code>.
     */
    public AdministrableRoleAuthorizationsRecord setUser(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for
     * <code>information_schema.ADMINISTRABLE_ROLE_AUTHORIZATIONS.USER</code>.
     */
    public String getUser() {
        return (String) get(0);
    }

    /**
     * Setter for
     * <code>information_schema.ADMINISTRABLE_ROLE_AUTHORIZATIONS.HOST</code>.
     */
    public AdministrableRoleAuthorizationsRecord setHost(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for
     * <code>information_schema.ADMINISTRABLE_ROLE_AUTHORIZATIONS.HOST</code>.
     */
    public String getHost() {
        return (String) get(1);
    }

    /**
     * Setter for
     * <code>information_schema.ADMINISTRABLE_ROLE_AUTHORIZATIONS.GRANTEE</code>.
     */
    public AdministrableRoleAuthorizationsRecord setGrantee(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for
     * <code>information_schema.ADMINISTRABLE_ROLE_AUTHORIZATIONS.GRANTEE</code>.
     */
    public String getGrantee() {
        return (String) get(2);
    }

    /**
     * Setter for
     * <code>information_schema.ADMINISTRABLE_ROLE_AUTHORIZATIONS.GRANTEE_HOST</code>.
     */
    public AdministrableRoleAuthorizationsRecord setGranteeHost(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for
     * <code>information_schema.ADMINISTRABLE_ROLE_AUTHORIZATIONS.GRANTEE_HOST</code>.
     */
    public String getGranteeHost() {
        return (String) get(3);
    }

    /**
     * Setter for
     * <code>information_schema.ADMINISTRABLE_ROLE_AUTHORIZATIONS.ROLE_NAME</code>.
     */
    public AdministrableRoleAuthorizationsRecord setRoleName(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for
     * <code>information_schema.ADMINISTRABLE_ROLE_AUTHORIZATIONS.ROLE_NAME</code>.
     */
    public String getRoleName() {
        return (String) get(4);
    }

    /**
     * Setter for
     * <code>information_schema.ADMINISTRABLE_ROLE_AUTHORIZATIONS.ROLE_HOST</code>.
     */
    public AdministrableRoleAuthorizationsRecord setRoleHost(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for
     * <code>information_schema.ADMINISTRABLE_ROLE_AUTHORIZATIONS.ROLE_HOST</code>.
     */
    public String getRoleHost() {
        return (String) get(5);
    }

    /**
     * Setter for
     * <code>information_schema.ADMINISTRABLE_ROLE_AUTHORIZATIONS.IS_GRANTABLE</code>.
     */
    public AdministrableRoleAuthorizationsRecord setIsGrantable(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for
     * <code>information_schema.ADMINISTRABLE_ROLE_AUTHORIZATIONS.IS_GRANTABLE</code>.
     */
    public String getIsGrantable() {
        return (String) get(6);
    }

    /**
     * Setter for
     * <code>information_schema.ADMINISTRABLE_ROLE_AUTHORIZATIONS.IS_DEFAULT</code>.
     */
    public AdministrableRoleAuthorizationsRecord setIsDefault(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for
     * <code>information_schema.ADMINISTRABLE_ROLE_AUTHORIZATIONS.IS_DEFAULT</code>.
     */
    public String getIsDefault() {
        return (String) get(7);
    }

    /**
     * Setter for
     * <code>information_schema.ADMINISTRABLE_ROLE_AUTHORIZATIONS.IS_MANDATORY</code>.
     */
    public AdministrableRoleAuthorizationsRecord setIsMandatory(String value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for
     * <code>information_schema.ADMINISTRABLE_ROLE_AUTHORIZATIONS.IS_MANDATORY</code>.
     */
    public String getIsMandatory() {
        return (String) get(8);
    }

    // -------------------------------------------------------------------------
    // Record9 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row9<String, String, String, String, String, String, String, String, String> fieldsRow() {
        return (Row9) super.fieldsRow();
    }

    @Override
    public Row9<String, String, String, String, String, String, String, String, String> valuesRow() {
        return (Row9) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return AdministrableRoleAuthorizations.ADMINISTRABLE_ROLE_AUTHORIZATIONS.USER;
    }

    @Override
    public Field<String> field2() {
        return AdministrableRoleAuthorizations.ADMINISTRABLE_ROLE_AUTHORIZATIONS.HOST;
    }

    @Override
    public Field<String> field3() {
        return AdministrableRoleAuthorizations.ADMINISTRABLE_ROLE_AUTHORIZATIONS.GRANTEE;
    }

    @Override
    public Field<String> field4() {
        return AdministrableRoleAuthorizations.ADMINISTRABLE_ROLE_AUTHORIZATIONS.GRANTEE_HOST;
    }

    @Override
    public Field<String> field5() {
        return AdministrableRoleAuthorizations.ADMINISTRABLE_ROLE_AUTHORIZATIONS.ROLE_NAME;
    }

    @Override
    public Field<String> field6() {
        return AdministrableRoleAuthorizations.ADMINISTRABLE_ROLE_AUTHORIZATIONS.ROLE_HOST;
    }

    @Override
    public Field<String> field7() {
        return AdministrableRoleAuthorizations.ADMINISTRABLE_ROLE_AUTHORIZATIONS.IS_GRANTABLE;
    }

    @Override
    public Field<String> field8() {
        return AdministrableRoleAuthorizations.ADMINISTRABLE_ROLE_AUTHORIZATIONS.IS_DEFAULT;
    }

    @Override
    public Field<String> field9() {
        return AdministrableRoleAuthorizations.ADMINISTRABLE_ROLE_AUTHORIZATIONS.IS_MANDATORY;
    }

    @Override
    public String component1() {
        return getUser();
    }

    @Override
    public String component2() {
        return getHost();
    }

    @Override
    public String component3() {
        return getGrantee();
    }

    @Override
    public String component4() {
        return getGranteeHost();
    }

    @Override
    public String component5() {
        return getRoleName();
    }

    @Override
    public String component6() {
        return getRoleHost();
    }

    @Override
    public String component7() {
        return getIsGrantable();
    }

    @Override
    public String component8() {
        return getIsDefault();
    }

    @Override
    public String component9() {
        return getIsMandatory();
    }

    @Override
    public String value1() {
        return getUser();
    }

    @Override
    public String value2() {
        return getHost();
    }

    @Override
    public String value3() {
        return getGrantee();
    }

    @Override
    public String value4() {
        return getGranteeHost();
    }

    @Override
    public String value5() {
        return getRoleName();
    }

    @Override
    public String value6() {
        return getRoleHost();
    }

    @Override
    public String value7() {
        return getIsGrantable();
    }

    @Override
    public String value8() {
        return getIsDefault();
    }

    @Override
    public String value9() {
        return getIsMandatory();
    }

    @Override
    public AdministrableRoleAuthorizationsRecord value1(String value) {
        setUser(value);
        return this;
    }

    @Override
    public AdministrableRoleAuthorizationsRecord value2(String value) {
        setHost(value);
        return this;
    }

    @Override
    public AdministrableRoleAuthorizationsRecord value3(String value) {
        setGrantee(value);
        return this;
    }

    @Override
    public AdministrableRoleAuthorizationsRecord value4(String value) {
        setGranteeHost(value);
        return this;
    }

    @Override
    public AdministrableRoleAuthorizationsRecord value5(String value) {
        setRoleName(value);
        return this;
    }

    @Override
    public AdministrableRoleAuthorizationsRecord value6(String value) {
        setRoleHost(value);
        return this;
    }

    @Override
    public AdministrableRoleAuthorizationsRecord value7(String value) {
        setIsGrantable(value);
        return this;
    }

    @Override
    public AdministrableRoleAuthorizationsRecord value8(String value) {
        setIsDefault(value);
        return this;
    }

    @Override
    public AdministrableRoleAuthorizationsRecord value9(String value) {
        setIsMandatory(value);
        return this;
    }

    @Override
    public AdministrableRoleAuthorizationsRecord values(String value1, String value2, String value3, String value4, String value5, String value6, String value7, String value8, String value9) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AdministrableRoleAuthorizationsRecord
     */
    public AdministrableRoleAuthorizationsRecord() {
        super(AdministrableRoleAuthorizations.ADMINISTRABLE_ROLE_AUTHORIZATIONS);
    }

    /**
     * Create a detached, initialised AdministrableRoleAuthorizationsRecord
     */
    public AdministrableRoleAuthorizationsRecord(String user, String host, String grantee, String granteeHost, String roleName, String roleHost, String isGrantable, String isDefault, String isMandatory) {
        super(AdministrableRoleAuthorizations.ADMINISTRABLE_ROLE_AUTHORIZATIONS);

        setUser(user);
        setHost(host);
        setGrantee(grantee);
        setGranteeHost(granteeHost);
        setRoleName(roleName);
        setRoleHost(roleHost);
        setIsGrantable(isGrantable);
        setIsDefault(isDefault);
        setIsMandatory(isMandatory);
    }

    /**
     * Create a detached, initialised AdministrableRoleAuthorizationsRecord
     */
    public AdministrableRoleAuthorizationsRecord(com.neurasim.jooq.information_schema.tables.pojos.AdministrableRoleAuthorizations value) {
        super(AdministrableRoleAuthorizations.ADMINISTRABLE_ROLE_AUTHORIZATIONS);

        if (value != null) {
            setUser(value.getUser());
            setHost(value.getHost());
            setGrantee(value.getGrantee());
            setGranteeHost(value.getGranteeHost());
            setRoleName(value.getRoleName());
            setRoleHost(value.getRoleHost());
            setIsGrantable(value.getIsGrantable());
            setIsDefault(value.getIsDefault());
            setIsMandatory(value.getIsMandatory());
        }
    }
}
