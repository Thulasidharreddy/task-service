/*
 * This file is generated by jOOQ.
 */
package com.neurasim.jooq.information_schema.tables.pojos;


import java.io.Serializable;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ApplicableRoles implements Serializable {

    private static final long serialVersionUID = 1L;

    private final String user;
    private final String host;
    private final String grantee;
    private final String granteeHost;
    private final String roleName;
    private final String roleHost;
    private final String isGrantable;
    private final String isDefault;
    private final String isMandatory;

    public ApplicableRoles(ApplicableRoles value) {
        this.user = value.user;
        this.host = value.host;
        this.grantee = value.grantee;
        this.granteeHost = value.granteeHost;
        this.roleName = value.roleName;
        this.roleHost = value.roleHost;
        this.isGrantable = value.isGrantable;
        this.isDefault = value.isDefault;
        this.isMandatory = value.isMandatory;
    }

    public ApplicableRoles(
        String user,
        String host,
        String grantee,
        String granteeHost,
        String roleName,
        String roleHost,
        String isGrantable,
        String isDefault,
        String isMandatory
    ) {
        this.user = user;
        this.host = host;
        this.grantee = grantee;
        this.granteeHost = granteeHost;
        this.roleName = roleName;
        this.roleHost = roleHost;
        this.isGrantable = isGrantable;
        this.isDefault = isDefault;
        this.isMandatory = isMandatory;
    }

    /**
     * Getter for <code>information_schema.APPLICABLE_ROLES.USER</code>.
     */
    public String getUser() {
        return this.user;
    }

    /**
     * Getter for <code>information_schema.APPLICABLE_ROLES.HOST</code>.
     */
    public String getHost() {
        return this.host;
    }

    /**
     * Getter for <code>information_schema.APPLICABLE_ROLES.GRANTEE</code>.
     */
    public String getGrantee() {
        return this.grantee;
    }

    /**
     * Getter for <code>information_schema.APPLICABLE_ROLES.GRANTEE_HOST</code>.
     */
    public String getGranteeHost() {
        return this.granteeHost;
    }

    /**
     * Getter for <code>information_schema.APPLICABLE_ROLES.ROLE_NAME</code>.
     */
    public String getRoleName() {
        return this.roleName;
    }

    /**
     * Getter for <code>information_schema.APPLICABLE_ROLES.ROLE_HOST</code>.
     */
    public String getRoleHost() {
        return this.roleHost;
    }

    /**
     * Getter for <code>information_schema.APPLICABLE_ROLES.IS_GRANTABLE</code>.
     */
    public String getIsGrantable() {
        return this.isGrantable;
    }

    /**
     * Getter for <code>information_schema.APPLICABLE_ROLES.IS_DEFAULT</code>.
     */
    public String getIsDefault() {
        return this.isDefault;
    }

    /**
     * Getter for <code>information_schema.APPLICABLE_ROLES.IS_MANDATORY</code>.
     */
    public String getIsMandatory() {
        return this.isMandatory;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final ApplicableRoles other = (ApplicableRoles) obj;
        if (this.user == null) {
            if (other.user != null)
                return false;
        }
        else if (!this.user.equals(other.user))
            return false;
        if (this.host == null) {
            if (other.host != null)
                return false;
        }
        else if (!this.host.equals(other.host))
            return false;
        if (this.grantee == null) {
            if (other.grantee != null)
                return false;
        }
        else if (!this.grantee.equals(other.grantee))
            return false;
        if (this.granteeHost == null) {
            if (other.granteeHost != null)
                return false;
        }
        else if (!this.granteeHost.equals(other.granteeHost))
            return false;
        if (this.roleName == null) {
            if (other.roleName != null)
                return false;
        }
        else if (!this.roleName.equals(other.roleName))
            return false;
        if (this.roleHost == null) {
            if (other.roleHost != null)
                return false;
        }
        else if (!this.roleHost.equals(other.roleHost))
            return false;
        if (this.isGrantable == null) {
            if (other.isGrantable != null)
                return false;
        }
        else if (!this.isGrantable.equals(other.isGrantable))
            return false;
        if (this.isDefault == null) {
            if (other.isDefault != null)
                return false;
        }
        else if (!this.isDefault.equals(other.isDefault))
            return false;
        if (this.isMandatory == null) {
            if (other.isMandatory != null)
                return false;
        }
        else if (!this.isMandatory.equals(other.isMandatory))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.user == null) ? 0 : this.user.hashCode());
        result = prime * result + ((this.host == null) ? 0 : this.host.hashCode());
        result = prime * result + ((this.grantee == null) ? 0 : this.grantee.hashCode());
        result = prime * result + ((this.granteeHost == null) ? 0 : this.granteeHost.hashCode());
        result = prime * result + ((this.roleName == null) ? 0 : this.roleName.hashCode());
        result = prime * result + ((this.roleHost == null) ? 0 : this.roleHost.hashCode());
        result = prime * result + ((this.isGrantable == null) ? 0 : this.isGrantable.hashCode());
        result = prime * result + ((this.isDefault == null) ? 0 : this.isDefault.hashCode());
        result = prime * result + ((this.isMandatory == null) ? 0 : this.isMandatory.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("ApplicableRoles (");

        sb.append(user);
        sb.append(", ").append(host);
        sb.append(", ").append(grantee);
        sb.append(", ").append(granteeHost);
        sb.append(", ").append(roleName);
        sb.append(", ").append(roleHost);
        sb.append(", ").append(isGrantable);
        sb.append(", ").append(isDefault);
        sb.append(", ").append(isMandatory);

        sb.append(")");
        return sb.toString();
    }
}
