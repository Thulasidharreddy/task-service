/*
 * This file is generated by jOOQ.
 */
package com.neurasim.jooq.information_schema.tables.pojos;


import java.io.Serializable;

import org.jooq.JSON;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TableConstraintsExtensions implements Serializable {

    private static final long serialVersionUID = 1L;

    private final String constraintCatalog;
    private final String constraintSchema;
    private final String constraintName;
    private final String tableName;
    private final JSON engineAttribute;
    private final JSON secondaryEngineAttribute;

    public TableConstraintsExtensions(TableConstraintsExtensions value) {
        this.constraintCatalog = value.constraintCatalog;
        this.constraintSchema = value.constraintSchema;
        this.constraintName = value.constraintName;
        this.tableName = value.tableName;
        this.engineAttribute = value.engineAttribute;
        this.secondaryEngineAttribute = value.secondaryEngineAttribute;
    }

    public TableConstraintsExtensions(
        String constraintCatalog,
        String constraintSchema,
        String constraintName,
        String tableName,
        JSON engineAttribute,
        JSON secondaryEngineAttribute
    ) {
        this.constraintCatalog = constraintCatalog;
        this.constraintSchema = constraintSchema;
        this.constraintName = constraintName;
        this.tableName = tableName;
        this.engineAttribute = engineAttribute;
        this.secondaryEngineAttribute = secondaryEngineAttribute;
    }

    /**
     * Getter for
     * <code>information_schema.TABLE_CONSTRAINTS_EXTENSIONS.CONSTRAINT_CATALOG</code>.
     */
    public String getConstraintCatalog() {
        return this.constraintCatalog;
    }

    /**
     * Getter for
     * <code>information_schema.TABLE_CONSTRAINTS_EXTENSIONS.CONSTRAINT_SCHEMA</code>.
     */
    public String getConstraintSchema() {
        return this.constraintSchema;
    }

    /**
     * Getter for
     * <code>information_schema.TABLE_CONSTRAINTS_EXTENSIONS.CONSTRAINT_NAME</code>.
     */
    public String getConstraintName() {
        return this.constraintName;
    }

    /**
     * Getter for
     * <code>information_schema.TABLE_CONSTRAINTS_EXTENSIONS.TABLE_NAME</code>.
     */
    public String getTableName() {
        return this.tableName;
    }

    /**
     * Getter for
     * <code>information_schema.TABLE_CONSTRAINTS_EXTENSIONS.ENGINE_ATTRIBUTE</code>.
     */
    public JSON getEngineAttribute() {
        return this.engineAttribute;
    }

    /**
     * Getter for
     * <code>information_schema.TABLE_CONSTRAINTS_EXTENSIONS.SECONDARY_ENGINE_ATTRIBUTE</code>.
     */
    public JSON getSecondaryEngineAttribute() {
        return this.secondaryEngineAttribute;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final TableConstraintsExtensions other = (TableConstraintsExtensions) obj;
        if (this.constraintCatalog == null) {
            if (other.constraintCatalog != null)
                return false;
        }
        else if (!this.constraintCatalog.equals(other.constraintCatalog))
            return false;
        if (this.constraintSchema == null) {
            if (other.constraintSchema != null)
                return false;
        }
        else if (!this.constraintSchema.equals(other.constraintSchema))
            return false;
        if (this.constraintName == null) {
            if (other.constraintName != null)
                return false;
        }
        else if (!this.constraintName.equals(other.constraintName))
            return false;
        if (this.tableName == null) {
            if (other.tableName != null)
                return false;
        }
        else if (!this.tableName.equals(other.tableName))
            return false;
        if (this.engineAttribute == null) {
            if (other.engineAttribute != null)
                return false;
        }
        else if (!this.engineAttribute.equals(other.engineAttribute))
            return false;
        if (this.secondaryEngineAttribute == null) {
            if (other.secondaryEngineAttribute != null)
                return false;
        }
        else if (!this.secondaryEngineAttribute.equals(other.secondaryEngineAttribute))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.constraintCatalog == null) ? 0 : this.constraintCatalog.hashCode());
        result = prime * result + ((this.constraintSchema == null) ? 0 : this.constraintSchema.hashCode());
        result = prime * result + ((this.constraintName == null) ? 0 : this.constraintName.hashCode());
        result = prime * result + ((this.tableName == null) ? 0 : this.tableName.hashCode());
        result = prime * result + ((this.engineAttribute == null) ? 0 : this.engineAttribute.hashCode());
        result = prime * result + ((this.secondaryEngineAttribute == null) ? 0 : this.secondaryEngineAttribute.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("TableConstraintsExtensions (");

        sb.append(constraintCatalog);
        sb.append(", ").append(constraintSchema);
        sb.append(", ").append(constraintName);
        sb.append(", ").append(tableName);
        sb.append(", ").append(engineAttribute);
        sb.append(", ").append(secondaryEngineAttribute);

        sb.append(")");
        return sb.toString();
    }
}
