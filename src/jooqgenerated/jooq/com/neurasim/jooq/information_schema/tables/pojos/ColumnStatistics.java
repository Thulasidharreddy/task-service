/*
 * This file is generated by jOOQ.
 */
package com.neurasim.jooq.information_schema.tables.pojos;


import java.io.Serializable;

import org.jooq.JSON;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ColumnStatistics implements Serializable {

    private static final long serialVersionUID = 1L;

    private final String schemaName;
    private final String tableName;
    private final String columnName;
    private final JSON histogram;

    public ColumnStatistics(ColumnStatistics value) {
        this.schemaName = value.schemaName;
        this.tableName = value.tableName;
        this.columnName = value.columnName;
        this.histogram = value.histogram;
    }

    public ColumnStatistics(
        String schemaName,
        String tableName,
        String columnName,
        JSON histogram
    ) {
        this.schemaName = schemaName;
        this.tableName = tableName;
        this.columnName = columnName;
        this.histogram = histogram;
    }

    /**
     * Getter for <code>information_schema.COLUMN_STATISTICS.SCHEMA_NAME</code>.
     */
    public String getSchemaName() {
        return this.schemaName;
    }

    /**
     * Getter for <code>information_schema.COLUMN_STATISTICS.TABLE_NAME</code>.
     */
    public String getTableName() {
        return this.tableName;
    }

    /**
     * Getter for <code>information_schema.COLUMN_STATISTICS.COLUMN_NAME</code>.
     */
    public String getColumnName() {
        return this.columnName;
    }

    /**
     * Getter for <code>information_schema.COLUMN_STATISTICS.HISTOGRAM</code>.
     */
    public JSON getHistogram() {
        return this.histogram;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final ColumnStatistics other = (ColumnStatistics) obj;
        if (this.schemaName == null) {
            if (other.schemaName != null)
                return false;
        }
        else if (!this.schemaName.equals(other.schemaName))
            return false;
        if (this.tableName == null) {
            if (other.tableName != null)
                return false;
        }
        else if (!this.tableName.equals(other.tableName))
            return false;
        if (this.columnName == null) {
            if (other.columnName != null)
                return false;
        }
        else if (!this.columnName.equals(other.columnName))
            return false;
        if (this.histogram == null) {
            if (other.histogram != null)
                return false;
        }
        else if (!this.histogram.equals(other.histogram))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.schemaName == null) ? 0 : this.schemaName.hashCode());
        result = prime * result + ((this.tableName == null) ? 0 : this.tableName.hashCode());
        result = prime * result + ((this.columnName == null) ? 0 : this.columnName.hashCode());
        result = prime * result + ((this.histogram == null) ? 0 : this.histogram.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("ColumnStatistics (");

        sb.append(schemaName);
        sb.append(", ").append(tableName);
        sb.append(", ").append(columnName);
        sb.append(", ").append(histogram);

        sb.append(")");
        return sb.toString();
    }
}
